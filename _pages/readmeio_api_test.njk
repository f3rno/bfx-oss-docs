{% from "macros/api_docs/endpoint_doc_block.njk" import endpointDocBlock %}
{% set page_title = "v2 API Reference" %}
{% extends "layouts/base.njk" %}
{% block head %}
  <link rel="stylesheet" type="text/css" href="/index.css" />
  <link rel="stylesheet" type="text/css" href="/css/highlightjs/ir-black.css" />
{% endblock %}
{% block body %}
<div id="bfx-oss-docs-readmeio-header">
</div>
<div id="bfx-oss-docs-readmeio-wrapper">
  <div id="bfx-oss-docs-readmeio__sidebar">
    <ul>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>REST Public Endpoints</p>
</li>
<li id="rest-public-platform-status" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Platform Status</p>
</li>
<li id="rest-public-tickers" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Tickers</p>
</li>
<li id="rest-public-ticker" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Ticker</p>
</li>
<li id="rest-public-trades" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Trades</p>
</li>
<li id="rest-public-book" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Book</p>
</li>
<li id="rest-public-stats1" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Stats</p>
</li>
<li id="rest-public-candles" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Candles</p>
</li>
<li id="rest-public-conf" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Configs</p>
</li>
<li id="rest-public-status" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Status</p>
</li>
<li id="rest-public-liquidations" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Liquidation Feed</p>
</li>
<li id="rest-public-rankings" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Leaderboards</p>
</li>
<li id="rest-public-pulse-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Pulse History</p>
</li>
<li id="rest-public-pulse-profile" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Pulse Profile Details</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>REST Calculation Endpoints</p>
</li>
<li id="rest-public-calc-market-average-price" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Market Average Price</p>
</li>
<li id="rest-public-calc-foreign-exchange-rate" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Foreign Exchange Rate</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>REST Authenticated Endpoints</p>
</li>
<li id="rest-auth-wallets" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Wallets</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Orders</p>
</li>
<li id="rest-auth-orders" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Retrieve Orders</p>
</li>
<li id="rest-auth-submit-order" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Submit Order</p>
</li>
<li id="rest-auth-order-update" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Order Update</p>
</li>
<li id="rest-auth-cancel-order" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel Order</p>
</li>
<li id="rest-auth-order-multi" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Order Multi-OP</p>
</li>
<li id="rest-auth-order-cancel-multi" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel Order Multi</p>
</li>
<li id="rest-auth-orders-history" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Orders History</p>
</li>
<li id="rest-auth-order-trades" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Order Trades</p>
</li>
<li id="rest-auth-trades" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Trades</p>
</li>
<li id="rest-auth-ledgers" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Ledgers</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Positions</p>
</li>
<li id="rest-auth-info-margin" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Margin Info</p>
</li>
<li id="rest-auth-positions" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Retrieve Positions</p>
</li>
<li id="rest-auth-position-claim" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Claim Position</p>
</li>
<li id="rest-auth-positions-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Positions History</p>
</li>
<li id="rest-auth-positions-snap" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Positions Snapshot</p>
</li>
<li id="rest-auth-positions-audit" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Positions Audit</p>
</li>
<li id="rest-auth-deriv-pos-collateral-set" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Derivative Position Collateral</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Margin Funding</p>
</li>
<li id="rest-auth-funding-offers" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Offers</p>
</li>
<li id="rest-auth-submit-funding-offer" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Submit Funding Offer</p>
</li>
<li id="rest-auth-cancel-funding-offer" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel Funding Offer</p>
</li>
<li id="rest-auth-cancel-all-funding-offers" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel All Funding Offers</p>
</li>
<li id="rest-auth-funding-close" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Close</p>
</li>
<li id="rest-auth-funding-auto-renew" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Auto-renew</p>
</li>
<li id="rest-auth-keep-funding" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Keep Funding</p>
</li>
<li id="rest-auth-funding-offers-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Offers History</p>
</li>
<li id="rest-auth-funding-loans" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Loans</p>
</li>
<li id="rest-auth-funding-loans-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Loans History</p>
</li>
<li id="rest-auth-funding-credits" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Credits</p>
</li>
<li id="rest-auth-funding-credits-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Credits History</p>
</li>
<li id="rest-auth-funding-trades-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Trades</p>
</li>
<li id="rest-auth-info-funding" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Info</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Account Actions</p>
</li>
<li id="rest-auth-info-user" class="bfx-oss-docs-readmeio__sidebar-label">
<p>User Info</p>
</li>
<li id="rest-auth-logins-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Login History</p>
</li>
<li id="rest-auth-audit-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Changelog</p>
</li>
<li id="rest-auth-transfer" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Transfer Between Wallets</p>
</li>
<li id="rest-auth-deposit-address" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Deposit Address</p>
</li>
<li id="rest-auth-deposit-invoice" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Generate Invoice</p>
</li>
<li id="rest-auth-withdraw" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Withdrawal</p>
</li>
<li id="rest-auth-movements" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Movements</p>
</li>
<li id="rest-auth-alerts" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Alert List</p>
</li>
<li id="rest-auth-alert-set" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Alert Set</p>
</li>
<li id="rest-auth-alert-del" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Alert Delete</p>
</li>
<li id="rest-auth-calc-order-avail" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Balance Available for Orders/Offers</p>
</li>
<li id="rest-auth-settings-set" class="bfx-oss-docs-readmeio__sidebar-label">
<p>User Settings Write</p>
</li>
<li id="rest-auth-settings" class="bfx-oss-docs-readmeio__sidebar-label">
<p>User Settings Read</p>
</li>
<li id="rest-auth-settings-del" class="bfx-oss-docs-readmeio__sidebar-label">
<p>User Settings Delete</p>
</li>
<li id="rest-auth-pulse-hist" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Pulse History</p>
</li>
<li id="rest-auth-pulse-add" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Pulse Write</p>
</li>
<li id="rest-auth-pulse-del" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Pulse Delete</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Websocket Public Channels</p>
</li>
<li id="ws-public-ticker" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Ticker</p>
</li>
<li id="ws-public-trades" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Trades</p>
</li>
<li id="ws-public-books" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Books</p>
</li>
<li id="ws-public-raw-books" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Raw Books</p>
</li>
<li id="ws-public-candles" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Candles</p>
</li>
<li id="ws-public-status" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Status</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Websocket Authenticated Channels</p>
</li>
<li id="ws-auth-account-info" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Account Info</p>
</li>
<li id="ws-auth-orders" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Orders</p>
</li>
<li id="ws-auth-positions" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Positions</p>
</li>
<li id="ws-auth-trades" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Trades</p>
</li>
<li id="ws-auth-funding-offers" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Offers</p>
</li>
<li id="ws-auth-funding-credits" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Credits</p>
</li>
<li id="ws-auth-funding-loans" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Loans</p>
</li>
<li id="ws-auth-wallets" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Wallets</p>
</li>
<li id="ws-auth-balance-info" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Balance Info</p>
</li>
<li id="ws-auth-margin-info" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Margin Info</p>
</li>
<li id="ws-auth-funding" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Info</p>
</li>
<li id="ws-auth-funding-trades" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Funding Trades</p>
</li>
<li id="ws-auth-notifications" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Notifications</p>
</li>
<li id="ws-auth-historical-orders" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Historical Orders (deprecated)</p>
</li>
<li id="ws-auth-historical-offers" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Historical Offers (deprecated)</p>
</li>
<li id="ws-auth-historical-credits" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Historical Credits (deprecated)</p>
</li>
<li id="ws-auth-historical-loans" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Historical Loans (deprecated)</p>
</li>
<li  class="bfx-oss-docs-readmeio__sidebar-divider">
<p>Websocket Authenticated Inputs</p>
</li>
<li id="ws-auth-input" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Websocket Inputs</p>
</li>
<li id="ws-auth-input-order-new" class="bfx-oss-docs-readmeio__sidebar-label">
<p>New Order</p>
</li>
<li id="ws-auth-input-order-update" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Update Order</p>
</li>
<li id="ws-auth-input-order-multi-op" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Order Multi-OP</p>
</li>
<li id="ws-auth-input-order-cancel" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel Order</p>
</li>
<li id="ws-auth-input-order-cancel-multi" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel Order Multi</p>
</li>
<li id="ws-auth-input-offer-new" class="bfx-oss-docs-readmeio__sidebar-label">
<p>New Offer</p>
</li>
<li id="ws-auth-input-offer-cancel" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Cancel Offer</p>
</li>
<li id="ws-auth-input-calc" class="bfx-oss-docs-readmeio__sidebar-label">
<p>Calc</p>
</li>
    </ul>
  </div>
  <div id="bfx-oss-docs-readmeio__content">
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Platform Status</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get the current status of the platform, “Operative” or “Maintenance”. Maintenance periods generally last for a few minutes to a couple of hours and may be necessary from time to time during infrastructure upgrades. 

For real-time status notifications, we suggest using Websockets to listen to events 20060/20061. For more information about Websockets please see https://docs.bitfinex.com/v2/docs/ws-general.

For more information on REST Public endpoint example code structure please see https://docs.bitfinex.com/v2/docs/rest-public
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
OPERATIVE  | int  |  1=operative, 0=maintenance
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">Maintenance mode</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">When the platform is marked in maintenance mode, bots should stop all trading activity. Cancelling and placing new orders will not be possible during this time.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Tickers</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The tickers endpoint provides a high level overview of the state of the market. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day. The endpoint can retrieve multiple tickers with a single query.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Symbols</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">A list of possible trading pairs can be retrieved from [Configs](ref:rest-public-conf) by calling [pub:list:pair:exchange](https://api-pub.bitfinex.com/v2/conf/pub:list:pair:exchange). The API uses the format "t[Symbol]" (i.e. tBTCUSD, tETHUSD, tBTCUST, ...).

For funding use format "f[Symbol]" (e.g. fUSD, fBTC, fETH, ...). A list of all possible symbols can be retrieved from [Configs](ref:rest-public-conf) by calling [pub:list:currency](https://api-pub.bitfinex.com/v2/conf/pub:list:currency). Please note that not all listed currencies can be provided as funding.</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
SYMBOL | string | The symbol of the requested ticker data
FRR  |  float  |  Flash Return Rate - average of all fixed rate funding over the last hour (funding tickers only)
BID  |  float  |  Price of last highest bid
BID_PERIOD  |  int  |  Bid period covered in days (funding tickers only)
BID_SIZE  |  float  |  Sum of the 25 highest bid sizes
ASK  |  float  |  Price of last lowest ask
ASK_PERIOD  |  int  |  Ask period covered in days (funding tickers only)
ASK_SIZE  |  float  |  Sum of the 25 lowest ask sizes
DAILY_CHANGE  |  float  |  Amount that the last price has changed since yesterday
DAILY_CHANGE_RELATIVE  |  float  |  Relative price change since yesterday (*100 for percentage change)
LAST_PRICE  |  float  |  Price of the last trade
VOLUME  |  float  |  Daily volume
HIGH  |  float  |  Daily high
LOW  |  float  |  Daily low
FRR_AMOUNT_AVAILABLE | float | The amount of funding that is available at the Flash Return Rate (funding tickers only)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Ticker</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The ticker endpoint provides a high level overview of the state of the market for a specified pair. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
FRR  |  float  |  Flash Return Rate - average of all fixed rate funding over the last hour (funding tickers only)
BID  |  float  |  Price of last highest bid
BID_PERIOD  |  int  |  Bid period covered in days (funding tickers only)
BID_SIZE  |  float  | Sum of the 25 highest bid sizes
ASK  |  float  |  Price of last lowest ask
ASK_PERIOD  |  int  |  Ask period covered in days (funding tickers only)
ASK_SIZE  |  float  |  Sum of the 25 lowest ask sizes
DAILY_CHANGE  |  float  |  Amount that the last price has changed since yesterday
DAILY_CHANGE_RELATIVE  |  float  |  Relative price change since yesterday (*100 for percentage change)
LAST_PRICE  |  float  |  Price of the last trade
VOLUME  |  float  |  Daily volume
HIGH  |  float  |  Daily high
LOW  |  float  |  Daily low
FRR_AMOUNT_AVAILABLE | float | The amount of funding that is available at the Flash Return Rate (funding tickers only)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The trades endpoint allows the retrieval of past public trades and includes details such as price, size, and time. Optional parameters can be used to limit the number of results; you can specify a start and end timestamp, a limit, and a sorting method.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
ID | int | ID of the trade
MTS  |  int  |  millisecond time stamp
±AMOUNT  |  float  |  How much was bought (positive) or sold (negative).
PRICE  |  float  |  Price at which the trade was executed (trading tickers only)
RATE | float | Rate at which funding transaction occurred (funding tickers only)
PERIOD | int | Amount of time the funding transaction was for (funding tickers only)

The order that causes the trade (taker) determines whether a trade is logged as a buy or sell.

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Book</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Public Books endpoint allows you to keep track of the state of Bitfinex order books on a price aggregated basis with customizable precision. Raw books can be retrieved by using precision R0.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
PRICE | float | Price level (Trading only)
RATE | float | Rate level (Funding only)
PERIOD | float | Period level (Funding only)
COUNT | int | Number of orders at that price level
±AMOUNT | float | Total amount available at that price level.
ORDER_ID | int | Order ID

For Trading: if AMOUNT > 0 then bid else ask.
For Funding: if AMOUNT > 0 then ask else bid.

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Stats</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Stats endpoint provides various statistics on a specified trading pair or funding currency. Use the available keys to specify which statistic you wish to retrieve. Please note that the "Side" path param is only required for the pos.size key.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
MTS  |  int  | millisecond timestamp
VALUE  |  float  |  Total amount


{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Available Keys**

Key | Description | Arguments | Example
--- | --- | --- | ---
pos.size | Total Open Position (long / short) | :1m :SYM_TRADING :SIDE | pos.size:1m:tBTCUSD:long , pos.size:1m:tBTCUSD:short
funding.size | Total Active Funding | :1m :SYM_FUNDING | funding.size:1m:fUSD
credits.size | Active Funding used in positions | :1m :SYM_FUNDING | credits.size:1m:fUSD
credits.size.sym | Active Funding used in positions (per trading symbol) | :1m :SYM_FUNDING :SYM_TRADING | credits.size.sym:1m:fUSD:tBTCUSD
vol.1d / vol.7d / vol.30d |  1d/7d/30d volume updates (updates every 30 minutes) | :30m:BFX | vol.1d:30m:BFX
vwap | Volume weighted average price {updates current day value every 3 min) | :30m:SYM_TRADING | vwap:1d:tBTCUSD/hist
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title"></p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Specifying either 'hist' or 'last' is mandatory for all keys.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Candles</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Candles endpoint provides OCHL (Open, Close, High, Low) and volume data for the specified funding currency or trading pair. The endpoint provides the last 100 candles by default, but a limit and a start and/or end timestamp can be specified.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
MTS | int | millisecond time stamp
OPEN  |  float  |  First execution during the time frame
CLOSE  |  float  | Last execution during the time frame
HIGH  |  float  |  Highest execution during the time frame
LOW  |  float  |  Lowest execution during the timeframe
VOLUME  |  float  |  Quantity of symbol traded within the timeframe


{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Available Keys**

Key | Description | Arguments | Example
--- | --- | --- | ---
trade | Trading Candles | :TF :SYM_TRADING | trade :1m :tBTCUSD
trade | Funding Candles | :TF :SYM_FUNDING:pPERIOD | trade :1m :fUSD :p30
trade | Aggregate Funding Candles (AGGR=[10,30]) | :TF :SYM_FUNDING :aAGGR :pPER_START :p :PER_END | trade :1m :fUSD :a10 :p2 :p10 , trade :1m :fUSD :a10 :p11 :p20 , trade :1m :fUSD :a10 :p21 :p30 , trade :1m :fUSD :a30 :p2 :p30
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">undefined</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Specifying either 'hist' or 'last' is mandatory for all keys.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Configs</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Fetch currency and symbol site configuration data. 

A variety of types of config data can be fetched by constructing a path with an Action, Object, and conditionally a Detail value. 

Multiple sets of parameters may be passed, in a single request, to fetch multiple parts of the sites currency and symbol configuration data.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Path parameters and constructing a valid config request path**
A valid config request path is built up from 1 to 3 path parameters, an Action value, an Object value, and a Detail value.

Use the information below to configure your request parameters and retrieve a variety of different configurations.

1. ** Request Prefix**
Every request must start with a _pub:_ prefix, e.g. **pub:**map:currency:sym

2. **Action Parameter**
Pick the high level action you would like to perform:

|🔽valid action values| notes | complete request
|:--|:--|:--|
| map | Map symbols to related details| -
| list | Fetch a list currencies, pairs, or leaderboard competitions| -
| info | Fetch detailed information about pairs or transactions| -
| fees | Fetch the derivatives fees configuration. Does not require an Object or Detail parameter| pub:fees

3. **Object Parameter**
Pick the object you would like to receive.
An action will only accept certain object values.
Refer to the table to see what objects can be used with what actions:

🔽action value|object == currency  |object == pair |object == tx
|--|:--:|:--:|:--:|
|map	|✔ |- | -|
|list	        |✔ |✔| -|
|info	        |-  |✔ |✔|

Next, determine if a Detail parameter needs to be supplied alongside the selected action and object type:

🔽action & object value (request) |is a detail parameter value required|notes|complete request
|--|:--:|:--|:--|
|map:currency	|✔ | Select a Detail value from the table below to use this request| -
|map:tx	|✔ | The only detail for tx is 'method' and will map all currencies to the appropriate withdrawal method for API withdrawals| pub:map:tx:method
|list:currency	|-  | Fetches a list of all currencies available on the platform: | pub:list:currency
|list:pair	        |✔ | Select a Detail value from the table below to use this request| -
|list:competitions	        |- | Fetches a list of leaderboard competitions| -
|info:pair	        |-  |  Fetches an array of market information for each currency (WIP) | pub:info:pair
|info:tx	        |✔|  The only detail for info:tx is 'detail' and it shows the whether the status of our wallets for deposits and withdrawals (Active = 1, Maintenance = 0) | pub:info:tx:detail

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
***If no Detail value is required then step 3 can be skipped.***

4. **Detail Parameter**
Pick the detail that will be contained in the object.
An object will only accept certain detail values.
Refer to the table to see what details can be used with what objects:

🔽detail value | object == currency | object == pair | notes | complete request
|--|:--:|:--:|:--|:--|
|exchange	|-  |✔ | Fetches a list of valid exchange trading pairs |pub:list:pair:exchange
|margin		|-  |✔ | Fetches a list of valid margin trading pairs |pub:list:pair:margin
|sym		|✔  |- | Maps symbols to their API symbols (e.g. BAB -> BCH) | pub:map:currency:sym
|label		|✔  |- | Maps symbols to their verbose friendly names (e.g. BNT -> Bancor) | pub:map:currency:label
|unit		        |✔  |- | Maps symbols to unit of measure (where applicable) | pub:map:currency:unit
|undl		|✔  |- | Maps derivatives symbols to their underlying currency | pub:map:currency:undl
|pool		|✔  |- | Maps symbols to underlying network/protocol they operate on | pub:map:curreny:pool
|explorer	        |✔  |- | Maps symbols to their recognised block explorer URLs | pub:map:currency:explorer


{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Requesting multiple configurations**
Instead of performing a request for each configuration item it is possible to fetch multiple configurations in a single request.

Simpy append each request into a single string.
Comma separate each request, without any spaces.

Example of a multi-request that will fetch both margin and exchange trading pairs:
pub:list:pair:exchange,pub:list:pair:margin

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response structure**
All valid permutations and their responses are available for viewing from the code snippet above.

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Status</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Endpoint used to receive different types of platform information - currently supports derivatives pair status only.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Fields | Type | Description
--- | --- | ---
KEY                                        | string | Requested Key(s)
MTS                        | int | Millisecond timestamp
DERIV_PRICE                         | float | Derivative book mid price.
SPOT_PRICE                         | float | Book mid price of the underlying Bitfinex spot trading pair
MARK_PRICE                         | float | Price based on the BFX Composite Index
INSURANCE_FUND_BALANCE             | float | The balance available to the liquidation engine to absorb losses.
NEXT_FUNDING_EVT_TIMESTAMP_MS                         | int | Millisecond timestamp of next funding event
NEXT_FUNDING_ACCRUED                     | float | Current accrued funding for next 8h period
NEXT_FUNDING_STEP                         | int | Incremental accrual counter
CURRENT_FUNDING                         | float | Funding applied in the current 8h period
OPEN_INTEREST            | float | Total number of outstanding derivative contracts
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Historical Data</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Note: You must use the /hist path param if you wish to access historical data</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Liquidation Feed</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Endpoint to retrieve liquidations. By default it will retrieve the most recent liquidations, but time-specific data can be retrieved using timestamps.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Leaderboards</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The leaderboards endpoint allows you to retrieve leaderboard standings for unrealized profit (period delta), unrealized profit (inception), volume, and realized profit.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Leaderboard Competitions</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The [Configs Endpoint](https://dash.readme.io/project/bitfinex/v2/refs/rest-public-conf) can be used to retrieve a list of all competitions shown on our [Leaderboards](https://leaderboard.bitfinex.com/). 

The endpoint can be called like this: [https://api-pub.bitfinex.com/v2/conf/pub:list:competitions](https://api-pub.bitfinex.com/v2/conf/pub:list:competitions)</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

[block:parameters]
{
"data": {
"h-0": "Key",
"h-1": "Available Time Frames",
"h-2": "Available Symbols",
"0-0": "\"plu_diff\" - (Unrealised Profit (Period Delta))",
"1-0": "\"plu\" - (Unrealised Profit (Inception))",
"2-0": "\"plr\" - (Realized Profit)",
"3-0": "\"vol\" - (Volume)",
"0-1": "\"1w\", \"1M\"",
"1-2": "- Trading Pairs (e.g. tBTCUSD, tETHUSD)\n- tGLOBAL:USD",
"0-2": "tGLOBAL:USD",
"1-1": "\"3h\" - for specific pairs\n\"1w\", \"1M\" - for tGLOBAL:USD",
"2-2": "tGLOBAL:USD",
"2-1": "\"1w\", \"1M\"",
"3-2": "- Trading Pairs (e.g. tBTCUSD, tETHUSD)\n- tGLOBAL:USD",
"3-1": "\"3h\", \"1w\", \"1M\""
},
"cols": 3,
"rows": 4
}
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
MTS  |  int  | millisecond timestamp
USERNAME | string | Username
RANKING | int | Place on leaderboard
VALUE  |  float  |  Value of volume, unrealized profit, or realized profit
TWITTER_HANDLE | string | Shows the user's Twitter handle (if available)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Pulse History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
View the latest pulse messages. You can specify an end timestamp to view older messages.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
PID|  string | Pulse Message ID
MTS  |  int  |  Millisecond timestamp
PUID|  string | Pulse User ID
TITLE|  string | Title of the pulse message
CONTENT|  string | Content of the pulse message
IS_PIN|  int| 1 if the message is pinned, 0 if it is not pinned
IS_PUBLIC|  int| 1 if the message is public, 0 if it is not public
TAGS| array of strings | Tags used in the message
ATTACHMENTS| array of strings | Attachments used in the message
LIKES |  int  |  Number of likes
NICKNAME | string | Pulse user nickname
PICTURE | string| Pulse user profile picture
TEXT|  float  | Pulse user bio
TWITTER_HANDLE | string | Shows the user's Twitter handle (if available)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Pulse Profile Details</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
This endpoint shows details for a specific Pulse profile
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
PUID | string | Pulse User ID
MTS  |  int  | Millisecond timestamp
NICKNAME | string | Pulse user nickname
PICTURE | string| Pulse user profile picture
TEXT|  float  | Pulse user bio
TWITTER_HANDLE | string | Shows the user's Twitter handle (if available)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Market Average Price</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Calculate the average execution price for Trading or rate for Margin funding.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Fields | Type | Description
--- | --- | ---
PRICE_AVG | float | Average price for amount bought or sold given the current order book (Trading only)
AMOUNT| float | Amount traded or taken/provided in funding
RATE_AVG | float | Average rate for amount taken or provided given the current order book (Funding only)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Foreign Exchange Rate</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Calculate the exchange rate between two currencies
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Wallets</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get account wallet balances.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
WALLET_TYPE  |  string  |  Wallet name (exchange, margin, funding)
CURRENCY  |  string  |  Currency (e.g. USD, ...)
BALANCE  |  float  |  Wallet balance
UNSETTLED_INTEREST | float | Unsettled interest

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Retrieve Orders</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get active orders
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
ID  |  int64  |  Order ID
GID | int |  Group ID
CID | int |  Client Order ID
SYMBOL  |  string  |  Pair (tBTCUSD, …)
MTS_CREATE | int | Millisecond timestamp of creation
MTS_UPDATE | int | Millisecond timestamp of update
AMOUNT  |  float  |  Positive means buy, negative means sell.
AMOUNT_ORIG  |  float  |  Original amount
TYPE  |  string  |  The type of the order: LIMIT, MARKET, STOP, STOP LIMIT, TRAILING STOP, EXCHANGE MARKET, EXCHANGE LIMIT, EXCHANGE STOP, EXCHANGE STOP LIMIT, EXCHANGE TRAILING STOP, FOK, EXCHANGE FOK, IOC, EXCHANGE IOC.
TYPE_PREV  |  string  |  Previous order type
FLAGS | int | Active flags for order
STATUS  |  string  |  Order Status: ACTIVE, PARTIALLY FILLED,  RSN_PAUSE (trading is paused / paused due to AMPL rebase event)
PRICE  |  float  |  Price
PRICE_AVG  |  float  |  Average price
PRICE_TRAILING  |  float  |  The trailing price
PRICE_AUX_LIMIT  |  float  |  Auxiliary Limit price (for STOP LIMIT)
HIDDEN  |  int  |  1 if Hidden, 0 if not hidden
PLACED_ID  |  int  |  If another order caused this order to be placed (OCO) this will be that other order's ID

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Submit Order</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Submit an Order.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">meta: {aff_code: ...}</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">API orders can now pass an affiliate code through which you can earn rebates. To learn more about these rebates and our affiliate program, please look at the relevant [announcement](https://blog.bitfinex.com/announcements/the-revolution-continues/) and [knowledge base article](https://support.bitfinex.com/hc/en-us/articles/360036965234-The-Bitfinex-Affiliate-Program).</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Multiple Flags</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The summation of flags may result in multiple flags. For example 4160 (64 + 4096) means hidden post only.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Order Update</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Update an existing order, can be used to update margin, exchange, and derivative orders.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
MTS  |  int  |  Millisecond Time Stamp of the update
TYPE  |  string  |  Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req')
MESSAGE_ID  |  int  |  unique ID of the message
ID  |  int  |  Order ID
GID | int |  Group ID
CID | int |  Client Order ID
SYMBOL  |  string  |  Pair (tBTCUSD, …)
MTS_CREATE | int | Millisecond timestamp of creation
MTS_UPDATE | int | Millisecond timestamp of update
AMOUNT  |  float  |  Positive means buy, negative means sell.
AMOUNT_ORIG  |  float  |  Original amount
TYPE  |  string  |  The type of the order: LIMIT, MARKET, STOP, STOP LIMIT, TRAILING STOP, EXCHANGE MARKET, EXCHANGE LIMIT, EXCHANGE STOP, EXCHANGE STOP LIMIT, EXCHANGE TRAILING STOP, FOK, EXCHANGE FOK, IOC, EXCHANGE IOC.
TYPE_PREV  |  string  |  Previous order type
MTS_TIF  |  int  |  Millisecond timestamp of Time-In-Force: automatic order cancellation
ORDER_STATUS  |  string  |  Order Status: ACTIVE, EXECUTED @ PRICE(AMOUNT) e.g. "EXECUTED @ 107.6(-0.2)", PARTIALLY FILLED @ PRICE(AMOUNT), INSUFFICIENT MARGIN was: PARTIALLY FILLED @ PRICE(AMOUNT), CANCELED, CANCELED was: PARTIALLY FILLED @ PRICE(AMOUNT), RSN_DUST (amount is less than 0.00000001), RSN_PAUSE (trading is paused / paused due to AMPL rebase event)
PRICE  |  float  |  Price
PRICE_AVG  |  float  |  Average price
PRICE_TRAILING  |  float  |  The trailing price
PRICE_AUX_LIMIT  |  float  |  Auxiliary Limit price (for STOP LIMIT)
HIDDEN  |  int  |  0 if false, 1 if true
PLACED_ID  |  int  |  If another order caused this order to be placed (OCO) this will be that other order's ID
ROUTING | string | indicates origin of action: BFX, ETHFX, API>BFX, API>ETHFX
FLAGS | int | See https://docs.bitfinex.com/v2/docs/flag-values.
META | json string | Additional meta information about the order ( $F7 = IS_POST_ONLY (0 if false, 1 if true), $F33 = Leverage (int))
CODE  |  null or integer  | Work in progress
STATUS  |  string  |  Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...)
TEXT  |  string  |  Text of the notification
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Multiple Flags</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The summation of flags may result in multiple flags. For example 4160 (64 + 4096) means hidden post only.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel Order</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancel an existing order, can be used to cancel margin, exchange, and derivative orders. 

You can cancel the order by the Internal Order ID or using a Client Order ID (supplied by you). The Client Order ID is unique per day, so you also have to provide the date of the order as a date string in this format YYYY-MM-DD.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Order Multi-OP</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Send Multiple order-related operations. Please note the sent object has only one property with a value of an array of arrays detailing each order operation.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout danger">
<p class="bfx-oss-docs-readmeio-block__callout-title">Cancel All Orders</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Please note that using {"all" : 1} to cancel all orders will cancel all trading as well as all derivatives orders. Order IDs can be passed instead to cancel only selected orders.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel Order Multi</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancel multiple orders simultaneously. 

Orders can be canceled based on the Order ID, the combination of Client Order ID and Client Order Date, or the Group Order ID. Alternatively, the body param 'all' can be used with a value of 1 to cancel all orders.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout danger">
<p class="bfx-oss-docs-readmeio-block__callout-title">Cancel All Orders</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Please note that using {"all" : 1} to cancel all orders will cancel all trading as well as all derivatives orders. Order IDs can be passed instead to cancel only selected orders.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Orders History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Returns the most recent closed or canceled orders up to circa two weeks ago
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
ID  |  int  |  Order ID
GID | int |  Group ID
CID | int |  Client Order ID
SYMBOL  |  string  |  Pair (tBTCUSD, …)
MTS_CREATE | int | Millisecond timestamp of creation
MTS_UPDATE | int | Millisecond timestamp of update
AMOUNT  |  float  |  Positive means buy, negative means sell.
AMOUNT_ORIG  |  float  |  Original amount
TYPE  |  string  |  The type of the order: LIMIT, MARKET, STOP, STOP LIMIT, TRAILING STOP, EXCHANGE MARKET, EXCHANGE LIMIT, EXCHANGE STOP, EXCHANGE STOP LIMIT, EXCHANGE TRAILING STOP, FOK, EXCHANGE FOK, IOC, EXCHANGE IOC.
TYPE_PREV  |  string  |  Previous order type
MTS_TIF  |  int  |  Millisecond timestamp of Time-In-Force: automatic order cancellation
ORDER_STATUS  |  string  |  Order Status: ACTIVE, EXECUTED @ PRICE(AMOUNT) e.g. "EXECUTED @ 107.6(-0.2)", PARTIALLY FILLED @ PRICE(AMOUNT), INSUFFICIENT MARGIN was: PARTIALLY FILLED @ PRICE(AMOUNT), CANCELED, CANCELED was: PARTIALLY FILLED @ PRICE(AMOUNT), RSN_DUST (amount is less than 0.00000001), RSN_PAUSE (trading is paused / paused due to AMPL rebase event)
PRICE  |  float  |  Price
PRICE_AVG  |  float  |  Average price
PRICE_TRAILING  |  float  |  The trailing price
PRICE_AUX_LIMIT  |  float  |  Auxiliary Limit price (for STOP LIMIT)
HIDDEN  |  int  |  0 if false, 1 if true
PLACED_ID  |  int  |  If another order caused this order to be placed (OCO) this will be that other order's ID
ROUTING | string | indicates origin of action: BFX, ETHFX, API>BFX, API>ETHFX
FLAGS | int | See https://docs.bitfinex.com/v2/docs/flag-values.
META | json string | Additional meta information about the order ( $F7 = IS_POST_ONLY (0 if false, 1 if true), $F33 = Leverage (int))

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Order Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get Trades generated by an Order. Valid for trades upto 10 days old.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Trade database id
PAIR  |  string  |  Pair (BTCUSD, …)
MTS_CREATE  |  integer  |  Execution timestamp
ORDER_ID  |  integer  |  Order id
EXEC_AMOUNT  |  float  |  Positive means buy, negative means sell
EXEC_PRICE  |  float  |  Execution price
MAKER  |  int  |  1 if true, -1 if false
FEE  |  float  |  Fee
FEE_CURRENCY  |  string  |  Fee currency

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Retrieve your trades. Your most recent trades will be retrieved by default, but a timestamp can be used to retrieve time-specific data.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Trade database id
PAIR  |  string  |  Pair (BTCUSD, …)
MTS_CREATE  |  integer  |  Execution timestamp
ORDER_ID  |  integer  |  Order id
EXEC_AMOUNT  |  float  |  Positive means buy, negative means sell
EXEC_PRICE  |  float  |  Execution price
ORDER_TYPE  |  string  |  Order type
ORDER_PRICE  |  float  |  Order price
MAKER  |  int  |  1 if true, -1 if false
FEE  |  float  |  Fee
FEE_CURRENCY  |  string  |  Fee currency

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Ledgers</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
View your past ledger entries. Most recent entries are returned by default, but a timestamp can be used to retrieve time-specific data.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">Retrieve all ledgers</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The currency param can be omitted to return a ledger including all currencies. The path for this call is 'v2/auth/r/ledgers/hist'.</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Possible values for 'category' filter**

This table shows the possible values for the 'category' body param. The table shows the filter followed by the int value that should be entered in the 'category' param to activate the filter.
[block:parameters]
{
"data": {
"h-0": "Filter",
"h-1": "Int Value",
"h-2": "Filter",
"h-3": "Int Value",
"0-0": "exchange",
"1-0": "position modified, closed or liquidated",
"2-0": "position claim",
"3-0": "position transfer",
"4-0": "position swap",
"5-0": "position funding cost or interest charged",
"6-0": "margin / swap / interest payment",
"7-0": "settlement",
"8-0": "transfer",
"9-0": "deposit",
"0-1": "5",
"0-2": "cancelled withdrawal",
"1-2": "trading fee",
"2-2": "hidden order fee",
"1-1": "22",
"2-1": "23",
"3-1": "25",
"4-1": "26",
"5-1": "27",
"6-1": "28",
"7-1": "31",
"8-1": "51",
"9-1": "101",
"0-3": "105",
"1-3": "201",
"2-3": "204",
"3-2": "otc trade fee",
"4-2": "swap fee",
"5-2": "claiming fee",
"6-2": "used margin funding charge",
"7-2": "unused margin funding fee",
"8-2": "earned fee / affiliate rebate",
"9-2": "ETHFX loyalty fee",
"3-3": "207",
"4-3": "222",
"5-3": "224",
"6-3": "226",
"7-3": "228",
"8-3": "241",
"9-3": "243",
"0-4": "withdrawal fee",
"1-4": "withdrawal express fee",
"2-4": "miner fee",
"3-4": "staking payment",
"4-4": "adjustment",
"5-4": "expense",
"6-4": "currency conversion / computation fee",
"7-4": "monthly profit payment",
"8-4": "losses",
"0-5": "254",
"1-5": "255",
"2-5": "258",
"3-5": "262",
"4-5": "401",
"5-5": "501",
"6-5": "905",
"7-5": "907",
"8-5": "911",
"h-4": "Filter",
"h-5": "Int Value",
"9-4": "",
"9-5": "",
"10-0": "withdrawal",
"10-1": "104",
"10-2": "deposit fee",
"10-3": "251"
},
"cols": 6,
"rows": 11
}
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |   int |   Ledger identifier
CURRENCY    |   String  |   The symbol of the currency (ex. "BTC")
MTS   |   Date  |   Timestamp in milliseconds
AMOUNT  |   float |   Amount of funds moved
BALANCE    |   float |   New balance
DESCRIPTION  |   String  |   Description of ledger transaction

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Margin Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get account margin information (like P/L, Swaps, Margin Balance, Tradable Balance and others). Use different keys (base, SYMBOL, sym_all) to retrieve different kinds of data.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
SYMBOL | string | Pair (tBTCUSD, tBTCUST, ...) -  (key: 'SYMBOL')
USER_PL |  float  |  User Profit and Loss - (key: 'base')
USER_SWAPS |  float  |  Amount of swaps a user has - (key: 'base')
MARGIN_BALANCE |  float  |  Balance in your margin funding account - (key: 'base')
MARGIN_NET |  float  |  Balance after P&L is accounted for - (key: 'base')
MARGIN_MIN | float | Minimum required margin - (key: 'base')
TRADABLE_BALANCE |  float  |  Your buying power (how large a position you can obtain) - (key: 'SYMBOL' or 'sym_all')
GROSS_BALANCE | float | Your buying power including funds already reserved for open positions - (key: 'SYMBOL' or 'sym_all')
BUY | float | Maximum amount you can buy at current best ASK - (key: 'SYMBOL' or 'sym_all')
SELL | float | Maximum amount you can sell at current best BID - (key: 'SYMBOL' or 'sym_all')

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Ratelimit**: 45 req/min
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Limited to Margin Trading</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The v2 Margin Info endpoint is limited to margin trading and does not provide information related to derivatives trading.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Retrieve Positions</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get active positions
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
--|--|--
SYMBOL | string | Pair (tBTCUSD, …).
STATUS | string | Status (ACTIVE, CLOSED).
±AMOUNT | float | Size of the position. A positive value indicates a long position; a negative value indicates a short position.
BASE_PRICE | float | Base price of the position. (Average traded price of the previous orders of the position)
MARGIN_FUNDING | float | The amount of funding being used for this position.
MARGIN_FUNDING_TYPE | int | 0 for daily, 1 for term.
PL | float | Profit & Loss
PL_PERC | float | Profit & Loss Percentage
PRICE_LIQ | float | Liquidation price
LEVERAGE | float | Leverage used for the position
POSITION_ID | int64 | Position ID
MTS_CREATE| int | Millisecond timestamp of creation
MTS_UPDATE| int | Millisecond timestamp of update
TYPE| int | Identifies the type of position, 0 = Margin position, 1 = Derivatives position
COLLATERAL | float | The amount of collateral applied to the open position
COLLATERAL_MIN | float | The minimum amount of collateral required for the position
META | json string | Additional meta information about the position

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Claim Position</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The claim feature allows the use of funds you have in your Margin Wallet to settle a leveraged position as an exchange buy or sale. Claiming some or all of a position requires that you have enough partially realized P/L (you've reduced the position at a profit) and/or funds (BTC or USD) in your Margin Wallet (net of any outstanding financing charges) to satisfy some or all of the outstanding financing associated with your position.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
MTS  |  int  |  Millisecond Time Stamp of the update
TYPE  |  string  |  Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req', 'pm-req')
MESSAGE_ID  |  int  |  unique ID of the message
SYMBOL | string | Pair (tBTCUSD, …).
POSITION_STATUS | string | Status (ACTIVE, CLOSED).
±AMOUNT | float | Size of the position. Positive values means a long position, negative values means a short position.
BASE_PRICE | float | Base price of the position. (Average traded price of the previous orders of the position)
MARGIN_FUNDING | float | The amount of funding being used for this position.
MARGIN_FUNDING_TYPE | int | 0 for daily, 1 for term.
POSITION_ID | int | position identifier
MTS_CREATE | time | Timestamp of creation (millis)
MTS_UPDATE | time | Timestamp of last update (millis)
POS_TYPE | int | Type of Position (0 for margin, 1 for deriv)
COLLATERAL | str | Collateral
MIN_COLLATERAL | str | Min Collateral Required
META | str | Meta data about the position claim
CODE  |  null or integer  | Work in progress
STATUS  |  string  |  Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...)
TEXT  |  string  |  Text of the notification
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Position ID</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Position ID retrievable via https://docs.bitfinex.com/v2/reference#rest-auth-positions</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Positions History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Returns data on past positions. Timestamps can be used to retrieve results for a specific time period.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
--|--|--
SYMBOL | string | Pair (tBTCUSD, …).
STATUS | string | Status (ACTIVE, CLOSED).
±AMOUNT | float | Size of the position. A positive value indicates a long position; a negative value indicates a short position.
BASE_PRICE | float | Base price of the position. (Average traded price of the previous orders of the position)
MARGIN_FUNDING | float | The amount of funding being used for this position.
MARGIN_FUNDING_TYPE | int | 0 for daily, 1 for term.
POSITION_ID | int | position identifier
MTS_CREATE | time | Timestamp of creation (millis)
MTS_UPDATE | time | Timestamp of last update (millis)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Positions Snapshot</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Returns position snapshots of user positions between the specified start and end perimiters. Snapshots are taken daily.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
--|--|--
SYMBOL | string | Pair (tBTCUSD, …).
STATUS | string | Status (ACTIVE, CLOSED).
±AMOUNT | float | Size of the position. A positive value indicates a long position; a negative value indicates a short position.
BASE_PRICE | float | Base price of the position. (Average traded price of the previous orders of the position)
MARGIN_FUNDING | float | The amount of funding being used for this position.
MARGIN_FUNDING_TYPE | int | 0 for daily, 1 for term.
POSITION_ID | int | position identifier
MTS_CREATE | time | Timestamp of creation (millis)
MTS_UPDATE | time | Timestamp of last update (millis)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Positions Audit</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Return an audit of your positions. You latest positions will be retrieved by default, but ID's can be specified to retrieve an audit for specific positions.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
--|--|--
SYMBOL | string | Pair (tBTCUSD, …).
STATUS | string | Status (ACTIVE, CLOSED).
±AMOUNT | float | Size of the position. Positive values means a long position, negative values means a short position.
BASE_PRICE | float | Base price of the position. (Average traded price of the previous orders of the position)
MARGIN_FUNDING | float | The amount of funding being used for this position.
MARGIN_FUNDING_TYPE | int | 0 for daily, 1 for term.
POSITION_ID | int64 | Position ID
MTS_CREATE| int | Millisecond timestamp of creation
MTS_UPDATE| int | Millisecond timestamp of update
TYPE| int | Identifies the type of position: 'null' = Margin position, 1 = Derivatives position
COLLATERAL | float | The amount of collateral applied to the open position
COLLATERAL_MIN | float | The minimum amount of collateral required for the position
META | json string | Additional meta information about the position

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Derivative Position Collateral</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Update the amount of collateral for a Derivative position
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Sets the amount of collateral, applied to the active derivative position, for the given symbol.
[block:image]
{
"images": [
{
"image": [
"https://files.readme.io/1e9466b-Screenshot_2.png",
"Screenshot_2.png",
1543,
127,
"#161e28"
],
"caption": ""
}
]
}
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
The amount of collateral applied correlates to the spread between the base price and the liquidation price.

More collateral equals less chance of the position being liquidated, and vice-versa

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Offers</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get active funding offers. A path param can be used to retrieve offers in a particular currency. All offers are returned if no currency is specified.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
MTS_CREATED  |  int  |  Millisecond Time Stamp when the offer was created
MTS_UPDATED  |  int  |  Millisecond Time Stamp when the offer was updated
AMOUNT  |  float  |  Amount of the offer
AMOUNT_ORIG  |  float  |  Amount of the offer when it was first created
TYPE  |  string  | "LIMIT, ..."
FLAGS  |  object  |  future params object (stay tuned)
STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Submit Funding Offer</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Submit a new funding offer.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel Funding Offer</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancels an existing Funding Offer based on the offer ID entered.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Offer ID</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The offer ID can be retrieved by calling the [Funding Offers](https://docs.bitfinex.com/reference#rest-auth-funding-offers) endpoint.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel All Funding Offers</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancel all of your current funding offers. Can also be used to only cancel offers in the specified currency.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Currency</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Specifying a currency is optional. If the currency param is omitted, all open offers will be cancelled.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Close</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Return Taken "Used" or "Unused" funding.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
MTS  |  int  |  Millisecond Time Stamp of the update
TYPE  |  string  |  Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req')
MESSAGE_ID  |  int  |  unique ID of the message
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
CREDIT_SIDE | string | "Lend" or "Loan"
MTS_CREATED  |  int  |  Millisecond Time Stamp when the offer was created
MTS_UPDATED  |  int  |  Millisecond Time Stamp when the offer was created
AMOUNT  |  float  |  Amount the offer is for
FLAGS | int | See https://docs.bitfinex.com/v2/docs/flag-values.
OFFER_STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED, CLOSED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
CREDIT_OPENING_DATE | str | Date opened
CREDIT_LAST_PAYOUT | str | Date last funding payment
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true
NO_CLOSE | str | Whether or not the funding offer had "keep" selected
CODE  |  null or integer  | Work in progress
STATUS  |  string  |  Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...)
TEXT  |  string  |  Text of the notification
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">Offer ID</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Please note that the Offer ID needed is not the one received from the initial offer submission response. The Offer ID should be retrieved via the [Funding Loans](https://docs.bitfinex.com/v2/reference#rest-auth-funding-loans) and [Funding Credits](https://docs.bitfinex.com/reference#rest-auth-funding-credits) endpoints.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Auto-renew</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Activate or deactivate auto-renew. Allows you to specify the currency, amount, rate, and period.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Keep Funding</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Toggle to keep funding taken. Specify loan for unused funding and credit for used funding.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Loan and credit ID's</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Loan or credit ID's can be retrieved throug the  [Funding Loans](https://docs.bitfinex.com/reference?showHidden=94bdb#rest-auth-funding-loans) and [Funding Credits](https://docs.bitfinex.com/reference?showHidden=94bdb#rest-auth-funding-credits) endpoints.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Offers History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get past inactive funding offers.
Limited to last 3 days.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
MTS_CREATED  |  int  |  Millisecond Time Stamp when the offer was created
MSG_UPDATED  |  int  |  Millisecond Time Stamp when the offer was created
AMOUNT  |  float  |  Amount the offer is for
AMOUNT_ORIG  |  float  |  Amount the offer was entered with originally
TYPE  |  string  | "lend" or "loan"
FLAGS  |  object  |  future params object (stay tuned)
STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Loans</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Funds not used in active positions
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
SIDE  |  int |  1 if you are the lender, 0 if you are both the lender and borrower, -1 if you're the borrower
MTS_CREATE  |  int  |  Millisecond Time Stamp when the offer was created
MTS_UPDATE  |  int  |  Millisecond Time Stamp when the offer was created
AMOUNT  |  float  |  Amount the offer is for
FLAGS  |  object  |  future params object (stay tuned)
STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
MTS_OPENING  |  int  |  Millisecond Time Stamp for when the loan was opened
MTS_LAST_PAYOUT  |  int  |  Millisecond Time Stamp for when the last payout was made
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true
NO_CLOSE  |  int  | If funding will be returned when position is closed. 0 if false, 1 if true

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Loans History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Inactive funds not used in positions.
Limited to last 3 days.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
SIDE  |  int |  1 if you are the lender, 0 if you are both the lender and borrower, -1 if you're the borrower
MTS_CREATE  |  int  |  Millisecond Time Stamp when the offer was created
MTS_UPDATE  |  int  |  Millisecond Time Stamp when the offer was created
AMOUNT  |  float  |  Amount the offer is for
FLAGS  |  object  |  future params object (stay tuned)
STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
MTS_OPENING  |  int  |  Millisecond Time Stamp for when the loan was opened
MTS_LAST_PAYOUT  |  int  |  Millisecond Time Stamp for when the last payout was made
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true
NO_CLOSE  |  int  | If funding will be returned when position is closed. 0 if false, 1 if true

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Credits</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Funds used in active positions
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
SIDE  |  int |  1 if you are the lender, 0 if you are both the lender and borrower, -1 if you're the borrower
MTS_CREATE  |  int  |  Millisecond Time Stamp when the offer was created
MSG_UPDATE  |  int  |  Millisecond Time Stamp when the offer was updated
AMOUNT  |  float  |  Amount the offer is for
FLAGS  |  object  |  future params object (stay tuned)
STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
MTS_OPENING  |  int  |  Millisecond Time Stamp when funding opened
MTS_LAST_PAYOUT  |  int  |  Millisecond Time Stamp when last payout received
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true
NO_CLOSE  |  int  |  0 if false, 1 if true Whether the funding will be closed when the position is closed
POSITION_PAIR  |  string  |  Pair of the position that the funding was used for

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Credits History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Inactive funds used in positions.
Limited to last 3 days.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
SIDE  |  int |  1 if you are the lender, 0 if you are both the lender and borrower, -1 if you're the borrower
MTS_CREATE  |  int  |  Millisecond Time Stamp when the offer was created
MSG_UPDATE  |  int  |  Millisecond Time Stamp when the offer was created
AMOUNT  |  float  |  Amount the offer is for
FLAGS  |  object  |  future params object (stay tuned)
STATUS  |  string  | Offer Status: ACTIVE, EXECUTED, PARTIALLY FILLED, CANCELED
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
MTS_OPENING  |  int  |  Millisecond Time Stamp when funding opened
MTS_LAST_PAYOUT  |  int  |  Millisecond Time Stamp when last payout received
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN  |  int  |  0 if false, 1 if true
RENEW  |  int  |  0 if false, 1 if true
NO_CLOSE  |  int  |  0 if false, 1 if true Whether the funding will be closed when the position is closed
POSITION_PAIR  |  string  |  Pair of the position that the funding was used for

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get funding trades. Can be used to request funding trades for a specific currency or to retrieve trades for all currencies at once.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  integer  |  Offer ID
SYMBOL  |  string  |  The currency of the offer (fUSD, etc)
MTS_CREATE  |  int  |  Millisecond Time Stamp when the offer was created
OFFER_ID  |  int  |  The ID of the offer
AMOUNT  |  float  |  Amount the offer is for
RATE  |  float  |  Rate of the offer
PERIOD  |  int  |  Period of the offer
MAKER  |  int  |  1 if true, -1 if false Whether the offer took liquidity off the funding book

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get account funding info
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
SYMBOL | string  |  The symbol the information pertains to (funding currencies)
YIELD_LOAN |  float  |  Weighted average rate for taken funding
YIELD_LEND |  float  | Weighted average rate for provided funding
DURATION_LOAN |  float  |  Weighted average duration for taken funding
DURATION_LEND |  float  | Weighted average duration for provided funding

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">User Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Retrieve the user ID, email, username and timezone setting for the account associated with the API key used.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  int |  Account ID
EMAIL  |  string  |  Account Email
USERNAME  |  string|  Account username
MTS_ACCOUNT_CREATE | int | Millisecond timestamp of account creation
VERIFIED | int |  Indicates if the user has a verified status (KYC) 1 = true, 0 = false
TIMEZONE | string | Account timezone setting

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Login History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Retrieve a list of past logins.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |  int |  Login ID
TIME |  int  | Millisecond timestamp of login
IP  |  string|  IP address of login
EXTRA INFO | object | Object with extra information

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Changelog</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Retrieve account changelog.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
MTS_CREATE |  int  | Millisecond timestamp of change
LOG  |  int |  Log entry
IP  |  string|  IP address for logged change
USER_AGENT | object | Browser info

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Transfer Between Wallets</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Transfer funds between wallets. This endpoint can also be used to convert USDT to USDT0 for derivatives trading.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
MTS  |  int  |  Millisecond Time Stamp of the update
TYPE  |  string  |  Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req')
MESSAGE_ID  |  int  |  unique ID of the message
MTS_UPDATED  |  int  |  Millisecond Time Stamp when the transfer was created
WALLET_FROM | string | Starting wallet
WALLET_TO | string | Destination wallet
CURRENCY | string | Currency
CURRENCY_TO | str | Currency converted to
AMOUNT | int | Amount of Transfer
CODE  |  null or integer  | Work in progress
STATUS  |  string  |  Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...)
TEXT  |  string  |  Text of the notification
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Derivatives Wallet</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Note that the margin wallet, for Derivative symbols, is the derivatives wallet. If the destination is 'margin' and the currency_to is 'USTF0', the funds will end up in the derivatives wallet.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Deposit Address</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Retrieve your deposit address or generate a new deposit address for a specific currency and wallet.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Tag/Memo/Payment_ID</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">For currencies that require a tag, memo, or payment ID, the endpoint will provide these. The deposit address cannot be retrieved through this endpoint, but you can find it on your deposit page on the website. The deposit address is always the same; the tag, memo, or payment ID is used to direct your deposit to the correct account and wallet.</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Fields**

Term | Type | Description
-- | -- | --
MTS  |  int  |  Millisecond Time Stamp of the update
TYPE  |  string  |  Purpose of notification ('acc_dep' for account deposit)
MESSAGE_ID  |  int  |  unique ID of the message
METHOD | string | Method of deposit
CURRENCY_CODE | string | Currency code of new address
ADDRESS | string | Deposit address (instead of the address, this field will show Tag/Memo/Payment_ID for currencies that require it)
POOL_ADDRESS | string | Pool address (for currencies that require a Tag/Memo/Payment_ID)
CODE  |  null or integer  | Work in progress
STATUS  |  string  |  Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...)
TEXT  |  string  |  Text of the notification
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Address Limit</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Please note that you may generate up to 3 addresses in total per currency per month. The only exception to this is IOTA, for which you can generate 3 deposit addresses per day (1 for each wallet type).</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Generate Invoice</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Generates a Lightning Network deposit invoice
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout danger">
<p class="bfx-oss-docs-readmeio-block__callout-title">Creating a deposit address</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">If this is the first time you are generating an LNX invoice on your account, you will first need to create a deposit address. To do this, call w/deposit/address  with { method: 'LNX', wallet: 'exchange' }</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Withdrawal</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to request a withdrawal from one of your wallets.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">Tether methods</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Tether can be withdrawn using different different networks. Different methods are used to specify which network should be used. These methods are the following:

"tetheruso" = Tether(USD) on Omni
"tetheruse" = Tether(USD) on Ethereum
"tetheruss" = Tether(USD) on EOS
"tetherusx" = Tether(USD) on Tron
"tetherusl" = Tether(USD) on Liquid
"tetherusdtalg" = Tether(USD) on Algorand</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Movements</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
View your past deposits/withdrawals. Currency can be specified to retrieve movements specific to that currency.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Term | Type | Description
-- | -- | --
ID  |   String  |   Movement identifier
CURRENCY    |   String  |   The symbol of the currency (ex. "BTC")
CURRENCY_NAME   |   String  |   The extended name of the currency (ex. "BITCOIN")
MTS_STARTED |   Date  |   Movement started at
MTS_UPDATED |   Date  |   Movement last updated at
STATUS  |   String  |   Current status
AMOUNT  |   String  |   Amount of funds moved (positive for deposits, negative for withdrawals)
FEES    |   String  |   Tx Fees applied
DESTINATION_ADDRESS |   String  |   Destination address
TRANSACTION_ID  |   String  |   Transaction identifier
WITHDRAW_TRANSACTION_ID  |   String  |   Optional personal withdraw transaction note

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Alert List</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Retrieve a list of active price alerts.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Ratelimit**: 45 req/min

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Alert Set</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Sets up a price alert at the given value
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Alert Delete</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Delete an active alert.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Balance Available for Orders/Offers</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Calculate the balance available for orders/offers
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Fields**

Fields | Type | Description
--- | --- | ---
AMOUNT_AVAIL  |  float  |  Amount available for order/offer

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">User Settings Write</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to create custom settings by creating key: value pairs.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Body Fields**

Term | Type | Description
-- | -- | --
Settings  |   Object  |   Object of keys and values to be set. Must follow regex pattern `/^api:[A-Za-z0-9_-]*$/`

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">User Settings Read</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to read custom settings by providing a key. You can set or adjust these settings using the [User Settings Write](https://docs.bitfinex.com/reference#user-settings-set) endpoint.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Body Fields**

Term | Type | Description
-- | -- | --
Keys  |   Array  |   Array of keys requested. Must follow regex pattern `/^api:[A-Za-z0-9_-]*$/`

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Returned Fields**

Term | Type | Description
-- | -- | --
KEY  |   String  |   Requested Key
VALUE | Self defined | Returned setting

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">User Settings Delete</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to delete custom settings.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Pulse History</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to retrieve your private pulse history or the public pulse history with an additional UID_LIKED field.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Response Details**

Fields | Type | Description
--- | --- | ---
PID|  string | Pulse Message ID
MTS  |  int  |  Millisecond timestamp
PUID|  string | Pulse User ID
TITLE|  string | Title of the pulse message
CONTENT|  string | Content of the pulse message
IS_PIN|  int| 1 if the message is pinned, 0 if it is not pinned
IS_PUBLIC|  int| 1 if the message is public, 0 if it is not public
TAGS| array of strings | Tags used in the message
ATTACHMENTS| array of strings | Attachments used in the message
LIKES |  int  |  Number of likes
UID_LIKED| int | 1 if you liked the post, 0 if you did not like the post
NICKNAME | string | Pulse user nickname
PICTURE | string| Pulse user profile picture
TEXT|  float  | Pulse user bio
TWITTER_HANDLE | string | Shows the user's Twitter handle (if available)

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Pulse Write</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to write Pulse messages
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Formatting**

* Title and Content should be strings (no HTML content allowed).
* Content field can be formatted using markdown.
* Images can be added to the body using the base64 format.

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Pulse Delete</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Allows you to delete your Pulse messages
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Ticker</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The ticker endpoint provides a high level overview of the state of the market for a specified pair. It shows the current best bid and ask, the last traded price, as well as information on the daily volume and price movement over the last day.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const ws = require('ws')
const w = new ws('wss://api-pub.bitfinex.com/ws/2')

w.on('message', (msg) => console.log(msg))

let msg = JSON.stringify({ 
  event: 'subscribe', 
  channel: 'ticker', 
  symbol: 'tBTCUSD' 
})

w.on('open', () => w.send(msg))
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'shell' %}
wscat -c wss://api-pub.bitfinex.com/ws/2
{ "event": "subscribe",  "channel": "ticker",  "symbol": "tBTCUSD" }
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'python' %}
ws = websocket.WebSocketApp('wss://api-pub.bitfinex.com/ws/2')

ws.on_open = lambda self: self.send('{ "event": "subscribe", "channel": "ticker", "symbol": "tBTCUSD"}')

ws.on_message = lambda self, evt:  print (evt)
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Fields | Type | Description
--- | --- | ---
SYMBOL | String | Trading pair or funding currency

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request / Response</p>
  {% code 'javascript' %}
// request
{ 
  event: "subscribe", 
  channel: "ticker", 
  symbol: SYMBOL
}

// response - trading
{
   event: "subscribed",
   channel: "ticker",
   chanId: CHANNEL_ID,
   symbol: SYMBOL,
   pair: PAIR
}

{"event":"subscribed","channel":"ticker","chanId":224555,"symbol":"tBTCUSD","pair":"BTCUSD"}

// response - funding
{
  event: "subscribed",
  channel: "fticker",
  chanId: CHANNEL_ID,
  symbol: SYMBOL
}

{"event":"subscribed","channel":"ticker","chanId":232591,"symbol":"fUSD","currency":"USD"}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'javascript' %}
// Trading pairs
[
  CHANNEL_ID,
  [
    BID,
    BID_SIZE,
    ASK,
    ASK_SIZE,
    DAILY_CHANGE,
    DAILY_CHANGE_RELATIVE,
    LAST_PRICE,
    VOLUME,
    HIGH,
    LOW
  ]
]

[443378,[7616.5,31.89055171,7617.5,43.358118629999986,-550.8,-0.0674,7617.1,8314.71200815,8257.8,7500]]

// Funding pairs
[
  CHANNEL_ID,
  [
    FRR,
    BID,
    BID_PERIOD,
    BID_SIZE,
    ASK,
    ASK_PERIOD,
    ASK_SIZE,
    DAILY_CHANGE,
    DAILY_CHANGE_RELATIVE,
    LAST_PRICE,
    VOLUME,
    HIGH,
    LOW
    _PLACEHOLDER,
    _PLACEHOLDER,
    FRR_AMOUNT_AVAILABLE
  ]
]

[234509,[0.0003193369863013699,0.0002401,30,3939629.6177260396,0.00019012,2,307776.1592138799,-0.00005823,-0.2344,0.00019016,122156333.45260866,0.00027397,6.8e-7,null,null,3441851.73330503]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update</p>
  {% code 'javascript' %}
// Trading pairs
[
  CHANNEL_ID,
  [
    BID,
    BID_SIZE,
    ASK,
    ASK_SIZE,
    DAILY_CHANGE,
    DAILY_CHANGE_RELATIVE,
    LAST_PRICE,
    VOLUME,
    HIGH,
    LOW
  ]
]

[443378,[7617,52.98726298,7617.1,53.601795929999994,-550.9,-0.0674,7617,8318.92961981,8257.8,7500]]

// Funding pairs
[
  CHANNEL_ID,
  [
    FRR,
    BID,
    BID_PERIOD,
    BID_SIZE,
    ASK,
    ASK_PERIOD,
    ASK_SIZE,
    DAILY_CHANGE,
    DAILY_CHANGE_RELATIVE,
    LAST_PRICE,
    VOLUME,
    HIGH,
    LOW
  ]
]

[234509,[0.0003193315068493151,0.0002401,30,4037829.0804227195,0.000189,4,384507.7314462898,-0.00005939,-0.2391,0.000189,122159083.98991197,0.00027397,6.8e-7,null,null,3441851.73330503]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
This channel sends a trade message whenever a trade occurs at Bitfinex. It includes all the pertinent details of the trade, such as price, size and the time of execution. The channel can send funding trade data as well.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const ws = require('ws')
const w = new ws('wss://api-pub.bitfinex.com/ws/2')

w.on('message', (msg) => console.log(msg))

let msg = JSON.stringify({ 
  event: 'subscribe', 
  channel: 'trades', 
  symbol: 'tBTCUSD' 
})

w.on('open', () => w.send(msg))
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'shell' %}
wscat -c wss://api-pub.bitfinex.com/ws/2
{ "event": "subscribe",  "channel": "trades",  "symbol": "tBTCUSD" }
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'python' %}
ws = websocket.WebSocketApp('wss://api-pub.bitfinex.com/ws/2')

ws.on_open = lambda self: self.send('{ "event": "subscribe", "channel": "trades", "symbol": "tBTCUSD"}')

ws.on_message = lambda self, evt:  print (evt)
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Fields | Type | Description
--- | --- | ---
SYMBOL | String | Trading pair or funding currency

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request / Response</p>
  {% code 'javascript' %}
// request
{ 
  event: "subscribe", 
  channel: "trades", 
  symbol: SYMBOL 
}

// response Trading
{
  event: "subscribed",
  channel: "trades",
  chanId: CHANNEL_ID,
  symbol: "tBTCUSD"
  pair: "BTCUSD"
}

{"event":"subscribed","channel":"trades","chanId":19111,"symbol":"tBTCUSD","pair":"BTCUSD"}

// response Funding
{
  event: "subscribed",
  channel: "trades",
  chanId: CHANNEL_ID,
  symbol: "fUSD"
}

{"event":"subscribed","channel":"trades","chanId":339521,"symbol":"fUSD","currency":"USD"}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'javascript' %}
// on trading pairs (ex. tBTCUSD)
[
  CHANNEL_ID,
  [
    [
      ID,
      MTS,
      AMOUNT,
      PRICE
    ],
    ...
  ]
]

[17470,[[401597393,1574694475039,0.005,7244.9],[401597392,1574694470503,-0.01,7245.3]]]  

// on funding currencies (ex. fUSD)
[
  CHANNEL_ID,
  [
    [
      ID,
      MTS,
      AMOUNT,
      RATE,
      PERIOD
    ],
    ...
  ]
]
  
[339521,[[133323072,1574694245478,-258.7458086,0.0002587,2],[133323071,1574694245368,-1932.20263916,0.0002587,2]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update</p>
  {% code 'javascript' %}
// on trading pairs (ex. tBTCUSD)
[
  CHANNEL_ID,
  <"te", "tu">,
  [
    ID,
    MTS,
    AMOUNT,
    PRICE
  ]
]

[17470,"te",[401597395,1574694478808,0.005,7245.3]]
[17470,"tu",[401597395,1574694478808,0.005,7245.3]]

// on funding currencies (ex. fUSD)
[
  CHANNEL_ID,
  <"fte", "ftu">,
  [
    ID,
    MTS,
    AMOUNT,
    RATE,
    PERIOD
  ]
]

[337371,"fte",[133323543,1574694605000,-59.84,0.00023647,2]]
[337371,"ftu",[133323543,1574694605000,-59.84,0.00023647,2]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Books</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Order Books channel allows you to keep track of the state of the Bitfinex order book.
It is provided on a price aggregated basis with customizable precision.
Upon connecting, you will receive a snapshot of the book
followed by updates for any changes to the state of the book.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const ws = require('ws')
const w = new ws('wss://api-pub.bitfinex.com/ws/2')

w.on('message', (msg) => console.log(msg))

let msg = JSON.stringify({ 
  event: 'subscribe', 
  channel: 'book', 
  symbol: 'tBTCUSD' 
})

w.on('open', () => w.send(msg))
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'shell' %}
wscat -c wss://api-pub.bitfinex.com/ws/2
{ "event": "subscribe", "channel": "book", "symbol": "tBTCUSD" }

  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'python' %}
ws = websocket.WebSocketApp('wss://api-pub.bitfinex.com/ws/2')

ws.on_open = lambda self: self.send('{ "event": "subscribe", "channel": "book", "symbol": "tBTCUSD"}')

ws.on_message = lambda self, evt:  print (evt)
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Fields | Type | Description
--- | --- | ---
SYMBOL | String | Trading pair or funding currency
PRECISION | string | Level of price aggregation (P0, P1, P2, P3, P4).<br>The default is P0
FREQUENCY | string | Frequency of updates (F0, F1).<br>F0=realtime / F1=2sec.<br>The default is F0.
LENGTH | string | Number of price points ("25", "100") [default="25"]

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
** Stream Fields **

Fields | Type | Description
--- | --- | ---
CHANNEL_ID | int | Identification number assigned to the channel for the duration of this connection.
PRICE | float | Price level
RATE | float | Rate level
PERIOD | float | Period level
COUNT | int | Number of orders at that price level (delete price level if count = 0)
±AMOUNT | float | Total amount available at that price level. Trading: if AMOUNT > 0 then bid else ask; Funding: if AMOUNT < 0 then bid else ask;

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
** Algorithm to create and keep a book instance updated **

1. subscribe to channel
2. receive the book snapshot and create your in-memory book structure
3. when *count* > 0 then you have to add or update the price level
3.1 if *amount* > 0 then add/update bids
3.2 if *amount* < 0 then add/update asks
4. when *count* = 0 then you have to delete the price level.
4.1 if *amount* = 1 then remove from bids
4.2 if *amount* = -1 then remove from asks

Node.JS example gists:
* Aggregated Book: https://gist.github.com/prdn/b8c067c758aab7fa3bf715101086b47c
* Raw Book: https://gist.github.com/prdn/b9c9c24fb1bb38604dcd1e94ee89dd9e

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Precision Levels**
* Significant Digits Calculations: https://support.bitfinex.com/hc/en-us/articles/115000371105-How-is-precision-calculated-using-Significant-Digits

Precision Level | Number of significant figures
--- | ---
P0 | 5
P1 | 4
P2 | 3
P3 | 2
P4 | 1

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Checksum**
An Order Book Checksum can be requested through the Websocket configuration. You can find out more [here](https://docs.bitfinex.com/docs/ws-general#section-configuration).

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">Error Codes</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">10011 : Unknown Book precision
10012 : Unknown Book length</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request / Response</p>
  {% code 'javascript' %}
// request
{ 
  event: 'subscribe',
  channel: 'book',
  symbol: SYMBOL,
  prec: PRECISION,
  freq: FREQUENCY,
  len: LENGTH 
}

{"event":"subscribed","channel":"book","chanId":17082,"symbol":"tBTCUSD","prec":"P0","freq":"F0","len":"25","pair":"BTCUSD"}

// response
{ 
  event: 'subscribed',
  channel: 'book',
  chanId: CHANNEL_ID,
  symbol: SYMBOL,
  prec: PRECISION,
  freq: FREQUENCY,
  len: LENGTH 
}

{"event":"subscribed","channel":"book","chanId":431549,"symbol":"fUSD","prec":"P0","freq":"F0","len":"25","currency":"USD"}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'javascript' %}
// on trading pairs (ex. tBTCUSD)
[
  CHANNEL_ID,
  [
    [
      PRICE,
      COUNT,
      AMOUNT
    ],
    ...
  ]
]
  
[17082,[[7254.7,3,3.3]]]
  
// on funding currencies (ex. fUSD)
[
  CHANNEL_ID,
  [
    [
      RATE,
      PERIOD,
      COUNT,
      AMOUNT
    ],
    ...
  ]
]

[431549,[[0.00023112,30,1,-15190.7005375]]]

  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update</p>
  {% code 'javascript' %}
// on trading pairs (ex. tBTCUSD)
[
  CHANNEL_ID,
  [
    PRICE,
    COUNT,
    AMOUNT
  ]
]

[17082,[7254.5,0,1]]
  
// on funding currencies (ex. fUSD)
[
  CHANNEL_ID,
  [
    RATE,
    PERIOD,
    COUNT,
    AMOUNT
  ]
]

[348748,[0.00023157,2,1,66.35007188]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Raw Books</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Raw Books channel provides the most granular books.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const ws = require('ws')
const w = new ws('wss://api-pub.bitfinex.com/ws/2')

w.on('message', (msg) => console.log(msg))

let msg = JSON.stringify({ 
  event: 'subscribe', 
  channel: 'book',
  prec: 'R0',
  symbol: 'tBTCUSD' 
})

w.on('open', () => w.send(msg))
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'shell' %}
wscat -c wss://api-pub.bitfinex.com/ws/2
{ "event": "subscribe", "channel": "book", "prec": "R0", "symbol": "tBTCUSD" }
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'python' %}
ws = websocket.WebSocketApp('wss://api-pub.bitfinex.com/ws/2')

ws.on_open = lambda self: self.send('{ "event": "subscribe", "channel": "book", "prec": "R0", "symbol": "tBTCUSD" }')

ws.on_message = lambda self, evt:  print (evt)
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Note</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">PRICE = 0 means that you have to remove the order from your book.</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Fields | Type | Description
--- | --- | ---
SYMBOL | String | Trading pair or funding currency
PREC | string | Level of price aggregation (R0 for Raw Books).<br>
LEN | string | Number of price points ("1", "25", "100") [default="25"]

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Fields | Type | Description
-- | -- | --
CHANNEL_ID | int | Identification number assigned to the channel for the duration of this connection.
ORDER_ID | int | Identification number of the order.
OFFER_ID | int | Identification number of the funding offer.
PRICE | float | Order price; if 0 you have to remove the order from your book
PERIOD | int | Funding period in days
RATE | float | Funding rate for the offer; if 0 you have to remove the offer from your book
±AMOUNT | float |  Amount of order
Trading: if AMOUNT > 0 then bid else ask; Funding: if AMOUNT < 0 then bid else ask;


{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
** Algorithm to create and keep a book instance updated **

1. subscribe to channel with R0 precision
2. receive the raw book snapshot and create your in-memory book structure
3. when *PRICE* > 0 then you have to add or update the order
4. when *PRICE* = 0 then you have to delete the order

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Note:** The algorithm for raw books using `R0` is based on the *ORDER ID* instead of *COUNT*, *PRICE* and *AMOUNT*.
If *LENGTH* is set to 25, you will get 25 orders (not price levels). If all orders belong to the same price level, your orderbook will just have that one price level.

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request / Response</p>
  {% code 'json' %}
// request
{
  event: "subscribe",
  channel: "book",
  prec: "R0",
  symbol: SYMBOL,
  len: LENGTH
}

{"event":"subscribed","channel":"book","chanId":433290,"symbol":"tBTCUSD","prec":"R0","freq":"F0","len":"25","pair":"BTCUSD"}

// response
{
  event: "subscribed",
  channel: "book",
  chanId: CHANNEL_ID,
  symbol: SYMBOL,
  prec: PRECISION,
  len: LENGTH
}

{"event":"subscribed","channel":"book","chanId":472778,"symbol":"fUSD","prec":"R0","freq":"F0","len":"25","currency":"USD"}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'json' %}
// on trading pairs (ex. tBTCUSD)
[
  CHANNEL_ID,
  [
    [
      ORDER_ID,
      PRICE,
      AMOUNT
    ],
    ...
  ]
]

[433290,[[34753002978,7294.7,1.54340371]]]  
  
// on funding currencies (ex. fUSD)
[
  CHANNEL_ID,
  [
    [
      OFFER_ID,
      PERIOD,
      RATE,
      AMOUNT
    ],
    ...
  ]
]

[472778,[[658282397,30,0.000233,-530]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Updates</p>
  {% code 'javascript' %}
// on trading pairs (ex. tBTCUSD)
[
  CHANNEL_ID,
  [
    ORDER_ID,
    PRICE,
    AMOUNT
  ]
]

[433290,[34753006045,0,-1]]
  
// on funding currencies (ex. fUSD)
[
  CHANNEL_ID,
  [
    OFFER_ID,
    PERIOD,
    RATE,
    AMOUNT
  ]
]

[472778,[658286906,2,0,1]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Candles</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Candles endpoint provides OCHL (Open, Close, High, Low) and volume data for the specified trading pair.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const ws = require('ws')
const w = new ws('wss://api-pub.bitfinex.com/ws/2')

w.on('message', (msg) => console.log(msg))

let msg = JSON.stringify({ 
  event: 'subscribe', 
  channel: 'candles', 
  key: 'trade:1m:tBTCUSD' //'trade:TIMEFRAME:SYMBOL'
})

w.on('open', () => w.send(msg))
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'shell' %}
wscat -c wss://api-pub.bitfinex.com/ws/2
{ "event": "subscribe",  "channel": "candles",  "key": "trade:1m:tBTCUSD" }
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'python' %}
ws = websocket.WebSocketApp('wss://api-pub.bitfinex.com/ws/2')

ws.on_open = lambda self: self.send('{ "event": "subscribe",  "channel": "candles",  "key": "trade:1m:tBTCUSD" }')

ws.on_message = lambda self, evt:  print (evt)
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Fields | Type | Description
--- | --- | ---
KEY | string | Specify the time frame and symbol ('trade:TIMEFRAME:SYMBOL')

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Fields | Type | Description
--- | --- | ---
CHANNEL_ID | int | Identification number assigned to the channel for the duration of this connection.
MTS | int | millisecond time stamp
OPEN  |  float  |  First execution during the time frame
CLOSE  |  float  | Last execution during the time frame
HIGH  |  float  |  Highest execution during the time frame
LOW  |  float  |  Lowest execution during the timeframe
VOLUME  |  float  |  Quantity of symbol traded within the timeframe

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request / Response</p>
  {% code 'javascript' %}
// request
{
   event: "subscribe",
   channel: "candles",
   key: "trade:1m:tBTCUSD"
}

// response
{
  event: "subscribed",
  channel: "candles",
  chanId": CHANNEL_ID,
  key: "trade:1m:tBTCUSD"
}

{"event":"subscribed","channel":"candles","chanId":343351,"key":"trade:1m:tBTCUSD"}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'javascript' %}
[
  CHANNEL_ID,
  [
    [
      MTS,
      OPEN,
      CLOSE,
      HIGH,
      LOW,
      VOLUME
    ],
    ...
  ]
]

[343351,[[1574698260000,7379.785503,7383.8,7388.3,7379.785503,1.68829482]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update</p>
  {% code 'javascript' %}
[
  CHANNEL_ID,
  [
    MTS,
    OPEN,
    CLOSE,
    HIGH,
    LOW,
    VOLUME
  ]
]

[343351,[1574698200000,7399.9,7379.7,7399.9,7371.8,41.63633658]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Status</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Subscribe to and receive different types of platform information - currently supports derivatives pair status and liquidation feed.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const ws = require('ws')
const w = new ws('wss://api-pub.bitfinex.com/ws/2')

w.on('message', (msg) => console.log(msg))

let msg = JSON.stringify({ 
  event: 'subscribe', 
  channel: 'status', 
  key: 'deriv:tBTCF0:USTF0' 
})

w.on('open', () => w.send(msg))
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'shell' %}
wscat -c wss://api-pub.bitfinex.com/ws/2
{ "event": "subscribe",  "channel": "status",  "key": "deriv:tBTCF0:USTF0" }
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'python' %}
ws = websocket.WebSocketApp('wss://api-pub.bitfinex.com/ws/2')

ws.on_open = lambda self: self.send('{ "event": "subscribe", "channel": "status", "key": "deriv:tBTCF0:USTF0"}')

ws.on_message = lambda self, evt:  print (evt)
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
The value of the key, contained in the subscription payload, determines what status data will be returned.

Derivatives status updates:
key: "deriv:SYMBOL" // e.g. "deriv:tBTCF0:USTF0"

Liquidation feed updates:
key: "liq:global"
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request / Response</p>
  {% code 'javascript' %}
// request
{ 
  event: "subscribe", 
  channel: "status", 
  key: KEY
}

// response - 
{
   event: "subscribed",
   channel: "status",
   chanId: CHANNEL_ID,
   key: KEY
}

//Derivative pair status
{"event":"subscribed","channel":"status","chanId":335856,"key":"deriv:tBTCF0:USTF0"}

//Liquidation feed
{"event":"subscribed","channel":"status","chanId":91684,"key":"liq:global"}

  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update</p>
  {% code 'javascript' %}
// Derivatives Status
[
  CHANNEL_ID,
  [
    TIME_MS,
    PLACEHOLDER, 
    DERIV_PRICE,
    SPOT_PRICE,
    PLACEHOLDER,
    INSURANCE_FUND_BALANCE,
    PLACEHOLDER,
    NEXT_FUNDING_EVT_TIMESTAMP_MS,
    NEXT_FUNDING_ACCRUED,
    NEXT_FUNDING_STEP,
    PLACEHOLDER,
    CURRENT_FUNDING
    PLACEHOLDER,
    PLACEHOLDER,
    MARK_PRICE,
    PLACEHOLDER,
    PLACEHOLDER,
    OPEN_INTEREST
  ]
]

[335856,[1574700235000,null,7242.85,7246.55,null,413428.41553523,null,1574726400000,0.00005674,870,null,0.00030976,null,null,7237.91,null,null,155.3675257]]

// Liquidation feed updates
[
  CHANNEL_ID,
  [
    ['pos', 
     POS_ID, 
     TIME_MS, 
     PLACEHOLDER, 
     SYMBOL, 
     AMOUNT, 
     BASE_PRICE, 
     PLACEHOLDER, 
     IS_MATCH, 
     IS_MARKET_SOLD, 
     PLACEHOLDER
     LIQUIDATION_PRICE
    ]
  ]
]

[91684,[["pos",142397657,1574697680828.2002,null,"tBSVUSD",-2.62932,91.583875238719,null,1,1,null,112.27]]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Account Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The account info channel is a channel that you are automatically subscribed to when you authenticate your session. It provides all the pertinent info for your orders, positions, trades, funding offers and loans, balances, and more.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const crypto = require('crypto-js') // Standard JavaScript cryptography library
const WebSocket = require('ws') // Websocket library for Node

const apiKey = '' // Users API credentials are defined here
const apiSecret = ''

const authNonce = Date.now() * 1000 // Generate an ever increasing, single use value. (a timestamp satisfies this criteria)
const authPayload = 'AUTH' + authNonce // Compile the authentication payload, this is simply the string 'AUTH' prepended to the nonce value
const authSig = crypto.HmacSHA384(authPayload, apiSecret).toString(crypto.enc.Hex) // The authentication payload is hashed using the private key, the resulting hash is output as a hexadecimal string

const payload = {
  apiKey, //API key
  authSig, //Authentication Sig
  authNonce, 
  authPayload,
  event: 'auth', // The connection event, will always equal 'auth'
  //dms: 4, // Optional Deam-Man-Switch flag to cancel all orders when socket is closed
  //filter: [] // Optional filter for the account info received (default = everything)
}

const wss = new WebSocket('wss://api.bitfinex.com/ws/2') // Create new Websocket

wss.on('open', () => wss.send(JSON.stringify(payload)))

wss.on('message', (msg) => {     // The 'message' event is called whenever the ws recieves ANY message
  let response = JSON.parse(msg)
  console.log(msg)
})
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'go' %}
package main
import (
    "crypto/hmac"
    "crypto/sha512"
    "encoding/hex"
    "encoding/json"
    "fmt"
    "log"
    "time"
    "golang.org/x/net/websocket"
)
func main() {
    ws, err := websocket.Dial("wss://api.bitfinex.com/ws/2", "", "http://localhost/")
    if err != nil {
        return
    }
    nonce := fmt.Sprintf("%v", time.Now().Unix())
    payload := "AUTH" + nonce
    sig := hmac.New(sha512.New384, []byte("API_SECRET"))
    sig.Write([]byte(payload))
    payload_sign := hex.EncodeToString(sig.Sum(nil))
    connectMsg, _ := json.Marshal(map[string]interface{}{
        "event":       "auth",
        "apiKey":      "API_KEY",
        "authSig":     payload_sign,
        "authPayload": payload,
        "authNonce":   nonce,
    })
    // Send auth message
    _, err = ws.Write(connectMsg)
    if err != nil {
        log.Fatal(err)
        return
    }
    // Read all incoming messages
    var msg string
    for {
        if err = websocket.Message.Receive(ws, &msg); err != nil {
            fmt.Println(err)
        } else {
            fmt.Println(msg)
        }
    }
}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Subscribing to Account Info**

Use the code above to open an authenticated connection. Subscribing to the Account Info channel is automatically done when you authenticate your session. You will continue to receive updates until the connection is disconnected/terminated/restarted.

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Filters**

Filters can be applied to limit the information received through the channel. You can find more information about setting up filters for the account info channel [here](https://docs.bitfinex.com/docs/ws-auth#section-channel-filters),

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Structure**
By default, authentication will subscribe you to all account info updates. The account info channel will be assigned a CHANNEL_ID of 0. All snapshots and updates provided through the channel will be structured as follows:
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'json' %}
[
 CHANNEL_ID // = 0
 <TYPE> //'on', 'ou', 'oc', etc. 
  [
   ... //Content goes here
  ]
]

  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Separate Streams**
Please see the documentation page for each stream to find a further specification of the contents returned by each stream. The following table shows all of the included streams, their purpose, and the abbreviations by which messages in the channel can be identified:
[block:parameters]
{
"data": {
"h-0": "Stream Name",
"h-1": "Purpose",
"h-2": "Associated Abbreviations (TYPE)s",
"0-0": "[Orders](https://docs.bitfinex.com/reference#ws-auth-orders)",
"1-0": "[Positions](https://docs.bitfinex.com/reference#ws-auth-position)",
"2-0": "[Trades](https://docs.bitfinex.com/reference#ws-auth-trades)",
"3-0": "[Funding Offers](https://docs.bitfinex.com/reference#ws-auth-offers)",
"4-0": "[Funding Credits](https://docs.bitfinex.com/reference#ws-auth-credits)",
"5-0": "[Funding Loans](https://docs.bitfinex.com/reference#ws-auth-loans)",
"6-0": "[Wallets](https://docs.bitfinex.com/reference#ws-auth-wallets)",
"7-0": "[Balance Info](https://docs.bitfinex.com/reference#ws-auth-balance)",
"8-0": "[Margin Info](https://docs.bitfinex.com/reference#ws-auth-margin)",
"9-0": "[Funding Info](https://docs.bitfinex.com/reference#ws-auth-funding)",
"10-0": "[Funding Trades](https://docs.bitfinex.com/reference#ws-auth-funding-trades)",
"11-0": "[Notifications](https://docs.bitfinex.com/reference#ws-auth-notifications)",
"0-1": "Snapshot and updates on the trade orders in your account.",
"0-2": "'os' = order snapshot; 'on' = order new; 'ou' = order update; 'oc' = order cancel",
"1-1": "Snapshot and updates on the positions in your account.",
"1-2": "'ps' = position snapshot; 'pn' = position new; 'pu' = position update; 'pc' = position close",
"2-1": "Provides a feed of your trades",
"2-2": "'te' = trade executed; 'tu' = trade execution update",
"3-1": "Provides a snapshot and updates on the funding offers in your account.",
"3-2": "'fos' = funding offer snapshot; 'fon' = funding offer new; 'fou' = funding offer update; 'foc' = funding offer cancel",
"4-1": "Provides a snapshot and updates on your provided funding used in active positions.",
"4-2": "'fcs' = funding credits snapshot; 'fcn' = funding credits new; 'fcu' = funding credits update; 'fcc' = funding credits close",
"5-1": "Provides a snapshot and updates on your provided funding that is not used in active positions.",
"5-2": "'fls' = funding loans snapshot; 'fln' = funding loans new; 'flu' = funding loans update; 'flc' = funding loans close",
"6-1": "Provides a snapshot and updates on wallet balance, unsettled interest, and available balance.",
"6-2": "'ws' = wallet snapshot; 'wu' = wallet update",
"7-1": "Provides updates on the total and net assets in your account.",
"7-2": "'bu' = balance update",
"10-1": "Provides a feed of your funding trades.",
"10-2": "'fte' = funding trade execution; 'ftu' = funding trade update",
"11-1": "Work in progress: will be used for different changes in status, price alerts, etc.",
"11-2": "'n' = notification",
"8-1": "Provides margin info updates (tradable balance, margin balance, margin net, margin required)",
"9-1": "Provides funding info updates (average rates for taken and provided funding, average duration for taken and provided funding)",
"8-2": "'miu' = margin info update",
"9-2": "'fiu' = funding info update"
},
"cols": 3,
"rows": 12
}
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Request</p>
  {% code 'json' %}
{
    event: "auth",
    apiKey: api_key,
    authSig: signature,
    authPayload: payload,
    authNonce: +authNonce,
    calc: 1
}
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response</p>
  {% code 'json' %}
{ event: 'auth',
  status: 'OK',
  chanId: 0,
  userId: 269312,
  caps: '{"orders": {"read": "1", "write": "0"}, "account": {"read": "1", "write": "0"}, "funding": {"read": "1", "write": "1"}, "history": {"read": "1", "write": "0"}, "wallets": {"read": "1", "write": "1"}, "withdraw": {"read": "0", "write": "1"}, "positions": {"read": "1", "write": "1"}}' }
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response failure</p>
  {% code 'json' %}
// response-failure
{  
   "event":"auth",
   "status":"FAIL",
   "chanId":0,
   "code":"<ERROR_CODE>"
}
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Orders</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive a snapshot and updates for any order events on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your orders. The account information channel provides a snapshot and updates on the orders in your account. The snapshot is delivered upon subscribing and any changes to your orders will be provided as updates for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Order events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Order events will use one of the following abbreviations: 'os' (order snapshot), 'on' (order new), 'ou' (order update), and 'oc' (order cancel).
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Term | Type | Description
-- | -- | --
CHAN_ID | int | Identification number for the channel subscribtion. Order events are always sent through the account information channel with CHAN_ID = 0
TYPE | string | 'os' (order snapshot), 'on' (order new), 'ou' (order update), 'oc' (order cancel).
ID  |  int  |  Order ID
GID | int |  Group ID
CID | int |  Client Order ID
SYMBOL  |  string  |  Pair (tBTCUSD, …)
MTS_CREATE | int | Millisecond timestamp of creation
MTS_UPDATE | int | Millisecond timestamp of update
AMOUNT  |  float  |  Positive means buy, negative means sell.
AMOUNT_ORIG  |  float  |  Original amount
ORDER_TYPE  |  string  |  The type of the order: LIMIT, MARKET, STOP, STOP LIMIT, TRAILING STOP, EXCHANGE MARKET, EXCHANGE LIMIT, EXCHANGE STOP, EXCHANGE STOP LIMIT, EXCHANGE TRAILING STOP, FOK, EXCHANGE FOK, IOC, EXCHANGE IOC.
TYPE_PREV  |  string  |  Previous order type
MTS_TIF  |  int  |  Millisecond timestamp of Time-In-Force: automatic order cancellation
FLAGS | int | See https://docs.bitfinex.com/v2/docs/flag-values.
ORDER_STATUS  |  string  |  Order Status: ACTIVE, EXECUTED @ PRICE(AMOUNT) e.g. "EXECUTED @ 107.6(-0.2)", PARTIALLY FILLED @ PRICE(AMOUNT), INSUFFICIENT MARGIN was: PARTIALLY FILLED @ PRICE(AMOUNT), CANCELED, CANCELED was: PARTIALLY FILLED @ PRICE(AMOUNT), RSN_DUST (amount is less than 0.00000001), RSN_PAUSE (trading is paused / paused due to AMPL rebase event)
PRICE  |  float  |  Price
PRICE_AVG  |  float  |  Average price
PRICE_TRAILING  |  float  |  The trailing price
PRICE_AUX_LIMIT  |  float  |  Auxiliary Limit price (for STOP LIMIT)
NOTIFY  |  int  |  0 if false, 1 if true
HIDDEN | int | 1 if Hidden, 0 if not hidden
PLACED_ID  |  int  |  If another order caused this order to be placed (OCO) this will be that other order's ID
ROUTING | string | indicates origin of action: BFX, ETHFX, API>BFX, API>ETHFX

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Multiple Flags</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The summation of flags may result in multiple flags. For example 4160 (64 + 4096) means hidden post only.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot ('os')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, //'os'
  [
    [
      ID,
      GID,
      CID,
      SYMBOL,
      MTS_CREATE, 
      MTS_UPDATE, 
      AMOUNT, 
      AMOUNT_ORIG, 
      ORDER_TYPE,
      TYPE_PREV,
      MTS_TIF,
      _PLACEHOLDER,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      PRICE,
      PRICE_AVG,
      PRICE_TRAILING,
      PRICE_AUX_LIMIT,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      NOTIFY,
      HIDDEN, 
      PLACED_ID,
      _PLACEHOLDER,
      _PLACEHOLDER,
      ROUTING,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER
    ], 
    ...
  ]
]
  
[0,"os",[[34930659963,null,1574955083558,"tETHUSD",1574955083558,1574955083573,0.201104,0.201104,"EXCHANGE LIMIT",null,null,null,0,"ACTIVE",null,null,120,0,0,0,null,null,null,0,0,null,null,null,"BFX",null,null,null]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('on', 'ou', 'oc')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, // <'on', 'ou', 'oc'>
  [
    ID, 
    GID,
    CID,
    SYMBOL, 
    MTS_CREATE, 
    MTS_UPDATE, 
    AMOUNT, 
    AMOUNT_ORIG, 
    ORDER_TYPE,
    TYPE_PREV,
    MTS_TIF,
    _PLACEHOLDER,
    FLAGS,
    ORDER_STATUS,
    _PLACEHOLDER,
    _PLACEHOLDER,
    PRICE,
    PRICE_AVG,
    PRICE_TRAILING,
    PRICE_AUX_LIMIT,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER,
    NOTIFY, 
    HIDDEN, 
    PLACED_ID,
    _PLACEHOLDER,
    _PLACEHOLDER,
    ROUTING,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER
  ]
]

[0,"oc",[34930659963,null,1574955083558,"tETHUSD",1574955083558,1574955354487,0.201104,0.201104,"EXCHANGE LIMIT",null,null,null,0,"CANCELED",null,null,120,0,0,0,null,null,null,0,0,null,null,null,"BFX",null,null,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Positions</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive a snapshot and updates for any position events on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your positions. The account information channel provides a snapshot and updates on the positions in your account. The snapshot is delivered upon subscribing and any changes to your positions will be provided as updates for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Position events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Positions events will use one of the following abbreviations: 'ps' (positions snapshot), 'pn' (position new), 'pu' (position update), and 'pc' (position close).
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Term | Type | Description
--|--|--
CHAN_ID | int | Identification number for the channel subscribtion. Position events are always sent through the account information channel with CHAN_ID = 0
TYPE | string | 'ps' (position snapshot), 'pn' (position new), 'pu' (position update), 'pc' (position close)
SYMBOL | string | Pair (tBTCUSD, …).
STATUS | string | Status (ACTIVE, CLOSED).
±AMOUNT | float | Size of the position. Positive values means a long position, negative values means a short position. 0 means position closed.
BASE_PRICE | float | The price at which you entered your position.
MARGIN_FUNDING | float | The amount of funding being used for this position.
MARGIN_FUNDING_TYPE | int | 0 for daily, 1 for term.
PL | float | Profit & Loss
PL_PERC | float | Profit & Loss Percentage
PRICE_LIQ | float | Liquidation price
LEVERAGE | float | Beta value
POSITION_ID | int | Position ID
MTS_CREATE| int | Millisecond timestamp of creation
MTS_UPDATE| int | Millisecond timestamp of update
TYPE| int | Identifies the type of position, 0 = Margin position, 1 = Derivatives position
COLLATERAL | float | The amount of collateral applied to the open position
COLLATERAL_MIN | float | The minimum amount of collateral required for the position
META | json string | Additional meta information about the position
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">NOTE</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">These messages have gained the ability to send the calculation values (liquidation price) equal to "null" meaning that the new calculated value is not yet available.

In order to receive those values the user have to actively request for it with a "calc" message.
See [calc input dedicated section](http://docs.bitfinex.com/v2/docs/changelog#section--calc-input-message) for more details.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot ('ps')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, // 'ps'
  [
    [
      SYMBOL, 
      STATUS, 
      AMOUNT, 
      BASE_PRICE, 
      MARGIN_FUNDING, 
      MARGIN_FUNDING_TYPE,
      PL,
      PL_PERC,
      PRICE_LIQ,
      LEVERAGE,
      FLAG,
      POSITION_ID,
      MTS_CREATE,
      MTS_UPDATE,
      PLACEHOLDER,
      TYPE,
      PLACEHOLDER,
      COLLATERAL,
      COLLATERAL_MIN,
      META
    ], 
    ...
  ]
]
  
[0,"ps",[["tETHUST","ACTIVE",0.2,153.71,0,0,null,null,null,null,null,142420429,null,null,null,0,null,0,null,{"reason":"TRADE","order_id":34934099168,"order_id_oppo":34934090814,"liq_stage":null,"trade_price":"153.71","trade_amount":"0.2"}]]]  
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('pn', 'pu', 'pc')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, // <‘pn’, ’pu’, ‘pc’>
  [
      SYMBOL, 
      STATUS, 
      AMOUNT, 
      BASE_PRICE, 
      MARGIN_FUNDING, 
      MARGIN_FUNDING_TYPE,
      PL,
      PL_PERC,
      PRICE_LIQ,
      LEVERAGE,
      FLAG,
      POSITION_ID,
      MTS_CREATE,
      MTS_UPDATE,
      PLACEHOLDER,
      TYPE,
      PLACEHOLDER,
      COLLATERAL,
      COLLATERAL_MIN,
      META
  ]
]

[0,"pu",["tETHUST","ACTIVE",0.2,153.71,0,0,-0.07944800000000068,-0.05855181835925015,67.52755254906451,1.409288545397275,null,142420429,null,null,null,0,null,0,0,{"reason":"TRADE","order_id":34934099168,"order_id_oppo":34934090814,"liq_stage":null,"trade_price":"153.71","trade_amount":"0.2"}]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive updates for any trade events on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your trades. The account information channel will provide a feed of your trades for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Trade events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Trade events will use one of the following abbreviations: 'te' (trade executed) and 'tu' (trade execution update). The 'te' message is sent when a trade is executed while the 'tu' message is sent shortly after containing the trade id (ID) and additional updated fields.
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update (te)</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, // 'te' 
  [
    ID, 
    SYMBOL, 
    MTS_CREATE,
    ORDER_ID, 
    EXEC_AMOUNT, 
    EXEC_PRICE, 
    ORDER_TYPE, 
    ORDER_PRICE, 
    MAKER,
    PLACEHOLDER,
    PLACEHOLDER,
		CID
  ]
]
 
[0,"te",[402088407,"tETHUST",1574963975602,34938060782,-0.2,153.57,"MARKET",0,-1,null,null,0]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update (tu)</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE // 'tu' 
  [
    ID, 
    SYMBOL, 
    MTS_CREATE, 
    ORDER_ID, 
    EXEC_AMOUNT, 
    EXEC_PRICE, 
    ORDER_TYPE, 
    ORDER_PRICE, 
    MAKER, 
    FEE, 
    FEE_CURRENCY,
  ]
]
  
[0,"tu",[402088407,"tETHUST",1574963975602,34938060782,-0.2,153.57,"MARKET",0,-1,-0.061668,"USD"]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Offers</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive a snapshot and updates for any position events on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your funding offers. The account information channel provides a snapshot and updates on the funding offers in your account. The snapshot is delivered upon subscribing and any changes to your positions will be provided as updates for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Funding offer events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Funding offer events will use one of the following abbreviations: 'fos' (funding offers snapshot), 'fon' (funding offer new), 'fou' (funding offers update), and 'foc' (funding offer cancel).
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot ('fos')</p>
  {% code 'json' %}
[
  CHAN_ID,
  TYPE,  //'fos'
  [
    [
      ID,
      SYMBOL,
      MTS_CREATED,
      MTS_UPDATED,
      AMOUNT,
      AMOUNT_ORIG,
      OFFER_TYPE,
      _PLACEHOLDER,
      _PLACEHOLDER,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      RATE,
      PERIOD,
      NOTIFY,
      HIDDEN,
      _PLACEHOLDER,
      RENEW,
      RATE_REAL,
    ],
    ...
  ]
]
    
[0,"fos",[[41237920,"fETH",1573912039000,1573912039000,0.5,0.5,"LIMIT",null,null,0,"ACTIVE",null,null,null,0.0024,2,0,0,null,0,null]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('fon', 'fou', 'foc')</p>
  {% code 'json' %}
[
  CHAN_ID,
  TYPE, // <'fon', 'fou', 'foc'>
  [
    ID,
    SYMBOL,
    MTS_CREATED,
    MTS_UPDATED,
    AMOUNT,
    AMOUNT_ORIG,
    TYPE,
    _PLACEHOLDER,
    _PLACEHOLDER,
    FLAGS,
    STATUS,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER,
    RATE,
    PERIOD,
    NOTIFY,
    HIDDEN,
    _PLACEHOLDER,
    RENEW,
    RATE_REAL
  ]
]

[0,"fon",[41238747,"fUST",1575026670000,1575026670000,5000,5000,"LIMIT",null,null,0,"ACTIVE",null,null,null,0.006000000000000001,30,0,0,null,0,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Credits</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive a snapshot and updates for any funding credits (funds used in active positions) on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your funding credits. The account information channel provides a snapshot and updates on the funding credits in your account. The snapshot is delivered upon subscribing and any changes to your funding credits will be provided as updates for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Funding credits events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Funding credits events will use one of the following abbreviations: 'fcs' (funding credits snapshot), 'fcn' (funding credits new), 'fcu' (funding credits update), 'fcc' (funding credits close).
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot ('fcs')</p>
  {% code 'json' %}
[
  CHAN_ID,
  TYPE, //'fcs'
  [
    [
      ID,
      SYMBOL,
      SIDE,
      MTS_CREATE,
      MTS_UPDATE,
      AMOUNT,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      RATE,
      PERIOD,
      MTS_OPENING,
      MTS_LAST_PAYOUT,
      NOTIFY,
      HIDDEN,
      _PLACEHOLDER,
      RENEW,
      RATE_REAL,
      NO_CLOSE,
      POSITION_PAIR
    ],
    ...
  ]
]
    
[0,"fcs",[[26223578,"fUST",1,1575052261000,1575296187000,350,0,"ACTIVE",null,null,null,0,30,1575052261000,1575293487000,0,0,null,0,null,0,"tBTCUST"],[26223711,"fUSD",-1,1575291961000,1575296187000,180,0,"ACTIVE",null,null,null,0.002,7,1575282446000,1575295587000,0,0,null,0,null,0,"tETHUSD"]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('fcn', 'fcu', 'fcc')</p>
  {% code 'json' %}
 [
  CHAN_ID,
  TYPE, // 'fcn', 'fcu', 'fcc':
  [
    ID, 
    SYMBOL, 
    SIDE, 
    MTS_CREATE, 
    MTS_UPDATE, 
    AMOUNT, 
    FLAGS, 
    STATUS,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER,
    RATE,
    PERIOD, 
    MTS_OPENING, 
    MTS_LAST_PAYOUT, 
    NOTIFY, 
    HIDDEN, 
    _PLACEHOLDER,
    RENEW,
    RATE_REAL, 
    NO_CLOSE, 
    POSITION_PAIR
  ]
]

[0,"fcu",[26223578,"fUST",1,1575052261000,1575296787000,350,0,"ACTIVE",null,null,null,0,30,1575052261000,1575293487000,0,0,null,0,null,0,"tBTCUST"]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Loans</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive a snapshot and updates for any funding loans (funds not used in active positions) on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your funding loans. The account information channel provides a snapshot and updates on the funding loans in your account. The snapshot is delivered upon subscribing and any changes to your funding loans will be provided as updates for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Funding loan events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Funding loan events will use one of the following abbreviations: 'fls' (funding loans snapshot), 'fln' (funding loan new), 'flu' (funding loans update), 'flc' (funding loan close).
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot ('fls')</p>
  {% code 'json' %}
[
  CHAN_ID,
  TYPE, //'fls'
  [
    [
      ID,
      SYMBOL,
      SIDE,
      MTS_CREATE,
      MTS_UPDATE,
      AMOUNT,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      RATE,
      PERIOD,
      MTS_OPENING,
      MTS_LAST_PAYOUT,
      NOTIFY,
      HIDDEN,
      _PLACEHOLDER,
      RENEW,
      RATE_REAL,
      NO_CLOSE
    ],
    ...
  ]
]

[0,"fls",[[2995442,"fUSD",-1,1575291961000,1575295850000,820,0,"ACTIVE",null,null,null,0.002,7,1575282446000,1575295850000,0,0,null,0,null,0]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('fln', 'flu', 'flc')</p>
  {% code 'json' %}
[
  CHAN_ID,
  <'fln', 'flu', 'flc'>,
  [
    ID,
    CURRENCY,
    SIDE,
    MTS_CREATE,
    MTS_UPDATE,
    AMOUNT,
    FLAGS,
    STATUS,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER,
    RATE,
    PERIOD,
    MTS_OPENING,
    MTS_LAST_PAYOUT,
    NOTIFY,
    HIDDEN,
    _PLACEHOLDER,
    RENEW,
    RATE_REAL,
    NO_CLOSE,
    ...
  ]
]

[0,"fln",[2995444,"fUSD",-1,1575298742000,1575298742000,1000,0,"ACTIVE",null,null,null,0.002,7,1575298742000,1575298742000,0,0,null,0,null,0]]

  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Wallets</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive a snapshot and updates for any wallet events on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your wallets. The account information channel provides a snapshot and updates on the wallet events in your account. The snapshot is delivered upon subscribing and any changes to your wallets will be provided as updates for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Wallet events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Wallet events will use one of the following abbreviations: 'ws' (wallet snapshot) and 'wu' (wallet update).
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Term | Type | Description
-- | -- | --
CHAN_ID | int | Identification number for the channel subscribtion. Wallet events are always sent through the account information channel with CHAN_ID = 0
TYPE | string | 'ws' (wallet snapshot), 'wu' (wallet update)
WALLET_TYPE  |  string  |  Wallet name (exchange, margin, funding)
CURRENCY  |  string  |  Currency (fUSD, etc)
BALANCE  |  float  |  Wallet balance
UNSETTLED_INTEREST | float | Unsettled interest
BALANCE_AVAILABLE  |  float / null  |  Amount not tied up in active orders, positions or funding (null if the value is not fresh enough).
DESCRIPTION | string | Description of the ledger entry
META | json | Provides info on the reason for the wallet update, if available.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Important</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">These messages have gained the ability to send the calculation values (available balance) equal to "null" meaning that the new calculated value is not yet available.

In order to receive those values the user have to actively request for it with a "calc" message.
See [calc input dedicated section](http://docs.bitfinex.com/v2/docs/changelog#section--calc-input-message) for more details.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot ('ws')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, //'ws'
  [
    [
      WALLET_TYPE, 
      CURRENCY, 
      BALANCE, 
      UNSETTLED_INTEREST,
      BALANCE_AVAILABLE,
      ...
    ], 
    ...
  ]
]

[0,"ws",[["exchange","SAN",19.76,0,null,null,null]]]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('wu')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, //'wu'
  [
    WALLET_TYPE, 
    CURRENCY, 
    BALANCE, 
    UNSETTLED_INTEREST,
    BALANCE_AVAILABLE,
    DESCRIPTION,
    META
  ]
]

[0,"wu",["exchange","BTC",1.61169184,0,null,"Exchange 0.01 BTC for USD @ 7804.6",{"reason":"TRADE","order_id":34988418651,"order_id_oppo":34990541044,"trade_price":"7804.6","trade_amount":"0.01"}]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Balance Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Balance Info channel provides data on the total and net assets in your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your account balance. The account information channel will provide a feed of your balance for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Balance events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Balance update events can be recognised by the 'bu' (balance update) abbreviation.
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('bu')</p>
  {% code 'json' %}
[
  CHAN_ID,
  TYPE, //'bu'
  [
    AUM,
    AUM_NET,
    ...
  ]
]
 
[0,"bu",[4131.85,4131.85]]  
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Margin Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive margin info updates for your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your margin info. The account information channel will provide a feed of your margin info for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Margin info events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Margin info events can be recognised by the 'miu' (margin info update) abbreviation.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Term | Type | Description
-- | -- | --
CHAN_ID | int | Identification number for the channel subscribtion. Margin info events are always sent through the account information channel with CHAN_ID = 0
TYPE | string | 'miu' (margin info update)
USER_PL |  float  |  User Profit and Loss
USER_SWAPS |  float  |  Amount of swaps a user has
SYMBOL | string  |  The symbol the information pertains to
TRADABLE_BALANCE |  float  |  Your buying power (how large a position you can obtain)
MARGIN_BALANCE |  float  |  Balance in your margin funding account
MARGIN_NET |  float  |  Balance after P&L is accounted for
MARGIN_REQUIRED |  float  |  Minimum required margin to keep positions open
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">NOTE</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">These messages have gained the ability to send the calculation values equal to "null" meaning that the new calculated value is not yet available.
In order to receive those values the user have to actively request for it with a "calc" message.
See calc input dedicated section for more details.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('miu')</p>
  {% code 'json' %}
// margin base calc
[
  CHAN_ID,
  TYPE, // 'miu'
  [
    'base',
    [
      USER_PL, 
      USER_SWAPS, 
      MARGIN_BALANCE, 
      MARGIN_NET,
      MARGIN_REQUIRED
      ...
    ]
   ]
]

[0,"miu",["base",[-13.014640000000007,0,49331.70267297,49318.68803297,27]]]

// margin symbol calc
[
  CHAN_ID,
  TYPE, // 'miu'
  [
    'sym',
    SYMBOL,
    [
      TRADABLE_BALANCE,
      GROSS_BALANCE,
      BUY,
      SELL,
      ...
    ]
   ]
]
  
[0,"miu",["sym","tETHUSD",[149361.09689202666,149639.26293509,830.0182168075556,895.0658432466332,null,null,null,null]]]  
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Info</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Get account funding info
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Term | Type | Description
-- | -- | --
SYMBOL | string  |  The symbol the information pertains to (funding currencies)
YIELD_LOAN |  float  |  Weighted average rate for taken funding
YIELD_LEND |  float  | Weighted average rate for provided funding
DURATION_LOAN |  float  |  Weighted average duration for taken funding
DURATION_LEND |  float  | Weighted average duration for provided funding
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">NOTE</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">These messages have gained the ability to send the calculation values equal to "null" meaning that the new calculated value is not yet available.In order to receive those values the user have to actively request for it with a "calc" message.See calc input dedicated section for more details.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('fiu')</p>
  {% code 'text' %}
[CHAN_ID,'fiu',['sym',SYMBOL[YIELD_LOAN,YIELD_LEND,DURATION_LOAN,DURATION_LEND,...],...]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Funding Trades</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Receive updates for any trade events on your account.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your funding trades. The account information channel will provide a feed of your funding trades for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Trade events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Funding trade events will use one of the following abbreviations: 'fte' (funding trade executed) and 'ftu' (funding trade update).
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('fte', 'ftu')</p>
  {% code 'json' %}
[
  CHAN_ID,
  TYPE // 'fte', 'ftu'
  [
    ID,
    CURRENCY,
    MTS_CREATE,
    OFFER_ID,
    AMOUNT,
    RATE,
    PERIOD,
    MAKER,
    ...
  ]
]

[0,"fte",[636854,"fUSD",1575282446000,41238905,-1000,0.002,7,null]]
[0,"ftu",[636854,"fUSD",1575282446000,41238905,-1000,0.002,7,null]]  
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Notifications</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
The Notifications channel is a work in progress that will be used for different changes in status, price alerts, etc.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Subscribe to the account information channel to keep track of your notifications. The account information channel will provide a feed of your notifications for as long as the channel remains open. Any authenticated connection is automatically subscribed to the account information channel.

Example code to open an authenticated connection can be found on our [Authenticated Channels Page](doc:ws-auth).

Notification events are sent with CHAN_ID = 0 and can be identified by looking at the TYPE stream field. Notification events can be recognised by the 'n' (notification) abbreviation.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}

{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout warning">
<p class="bfx-oss-docs-readmeio-block__callout-title">Work In Progress</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">This section (Notifications) is currently a work in progress, but it will be a way to be alerted as to different changes in status, price alerts, etc</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Stream Fields**

Term | Type | Description
-- | -- | --
CHAN_ID | int | Identification number for the channel subscribtion. Notification events are always sent through the account information channel with CHAN_ID = 0
TYPE | string | 'n' (notification)
MTS  |  int  |  Millisecond Time Stamp of the update
TYPE  |  string  |  Purpose of notification ('on-req', 'oc-req', 'uca', 'fon-req', 'foc-req') - an overview of all types can be found in our [Abbreviation Glossary](doc:abbreviations-glossary)
MESSAGE_ID  |  int  |  unique ID of the message
NOTIFY_INFO  |  array/object |  A message containing information regarding the notification
CODE  |  null or integer  | Work in progress
STATUS  |  string  |  Status of the notification; it may vary over time (SUCCESS, ERROR, FAILURE, ...)
TEXT  |  string  |  Text of the notification
{% endmarkdown %}
</div>
<h3 class="bfx-oss-docs-readmeio-block__api-header">Custom Notifications</h3>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
The following javascript example will allow you to create a custom notification.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
const obj = [
  0,
  'n',
  MESSAGE_ID, // can be null
  {
    type: 'ucm-test',
    info: {
      foo: 1,
      bar: 2
    }
  }
]

w1.send(JSON.stringify(obj))
  {% endcode %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Update ('n')</p>
  {% code 'json' %}
[
  CHAN_ID, 
  TYPE, //'n' 
  [
    MTS, 
    TYPE, 
    MESSAGE_ID, 
    null, 
      NOTIFY_INFO // NOTIFY_INFO comes as an array or object and differs per notification  
    CODE, 
    STATUS, 
    TEXT,
    ...
  ]
]
  
[0,"n",[1575282446099,"fon-req",null,null,[41238905,null,null,null,-1000,null,null,null,null,null,null,null,null,null,0.002,2,null,null,null,null,null],null,"SUCCESS","Submitting funding bid of 1000.0 USD at 0.2000 for 2 days."]]  
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>on-req / oc-req</p>
  {% code 'javascript' %}
notify_info =  [ 
  ID, 
  GID,
  CID,
  SYMBOL, 
  MTS_CREATE, 
  MTS_UPDATE, 
  AMOUNT, 
  AMOUNT_ORIG, 
  TYPE,
  TYPE_PREV,
  _PLACEHOLDER,
  _PLACEHOLDER,
  FLAGS,
  STATUS,
  _PLACEHOLDER,
  _PLACEHOLDER,
  PRICE,
  PRICE_AVG,
  PRICE_TRAILING,
  PRICE_AUX_LIMIT,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  NOTIFY, 
  HIDDEN, 
  PLACED_ID,
  ...
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>uca / price</p>
  {% code 'javascript' %}
notify_info = [ 
  KEY, 
  ‘price’, 
  SYMBOL, 
  PRICE, 
  COUNT, 
  DIRECTION 
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>fon-req / foc-req</p>
  {% code 'javascript' %}
notify_info = [
  ID,
  SYMBOL,
  MTS_CREATED,
  MTS_UPDATED,
  AMOUNT,
  AMOUNT_ORIG,
  TYPE,
  _PLACEHOLDER,
  _PLACEHOLDER,
  FLAGS,
  STATUS,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  RATE,
  PERIOD,
  NOTIFY,
  HIDDEN,
  _PLACEHOLDER,
  RENEW,
  RATE_REAL,
  ...
]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Historical Orders (deprecated)</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Deprecated channel that retrieves past orders.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'json' %}
[
  CHAN_ID, 
  'hos'
  [
    [
      ID, 
      GID,
      CID,
      SYMBOL, 
      MTS_CREATE, 
      MTS_UPDATE, 
      AMOUNT, 
      AMOUNT_ORIG, 
      TYPE,
      TYPE_PREV,
      _PLACEHOLDER,
      _PLACEHOLDER,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      PRICE,
      PRICE_AVG,
      PRICE_TRAILING,
      PRICE_AUX_LIMIT,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      NOTIFY, 
      HIDDEN, 
      PLACED_ID,
      ...
    ], 
    ...
  ]
]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Historical Offers (deprecated)</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Deprecated channel that provides your historical funding offers.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'json' %}
[
  CHAN_ID,
  'hfos',
  [
    [
      ID,
      SYMBOL,
      MTS_CREATED,
      MTS_UPDATED,
      AMOUNT,
      AMOUNT_ORIG,
      TYPE,
      _PLACEHOLDER,
      _PLACEHOLDER,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      RATE,
      PERIOD,
      NOTIFY,
      HIDDEN,
      _PLACEHOLDER,
      RENEW,
      RATE_REAL,
      ...
    ],
    ...
  ]
]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Historical Credits (deprecated)</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Deprecated channel that provides historical information on your provided funding used in active positions.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'json' %}
[
  CHAN_ID,
  'hfcs',
  [
    [
      ID,
      SYMBOL,
      SYMBOL,
      MTS_CREATE,
      MTS_UPDATE,
      AMOUNT,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      RATE,
      PERIOD,
      MTS_OPENING,
      MTS_LAST_PAYOUT,
      NOTIFY,
      HIDDEN,
      _PLACEHOLDER,
      RENEW,
      RATE_REAL,
      NO_CLOSE,
      POSITION_PAIR,
      ...
    ],
    ...
  ]
]

  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Historical Loans (deprecated)</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Deprecated channel that provides historical information on your provided funding which was not used in active positions.
      {% endmarkdown %}
    </div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Snapshot</p>
  {% code 'json' %}
[
  CHAN_ID,
  'hfls',
  [
    [
      ID,
      SYMBOL,
      SIDE,
      MTS_CREATE,
      MTS_UPDATE,
      AMOUNT,
      FLAGS,
      STATUS,
      _PLACEHOLDER,
      _PLACEHOLDER,
      _PLACEHOLDER,
      RATE,
      PERIOD,
      MTS_OPENING,
      MTS_LAST_PAYOUT,
      NOTIFY,
      HIDDEN,
      _PLACEHOLDER,
      RENEW,
      RATE_REAL,
      NO_CLOSE,
      ...
    ],
    ...
  ]
]

  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Websocket Inputs</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
This page lists the additional code necessary to send inputs through your Websocket connection. This code is needed in addition to the authentication payload listed [here](https://docs.bitfinex.com/docs/ws-auth).
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Edit the example code below depending on the type of input you wish to send. Simply edit the order details according to your wishes and the requirements for each input. You will also need to ensure that the payload (inputPayload) includes the appropriate abbreviation for the action you wish to perform. The example code included on this page is used to send a new order and therefore includes the 'on' (order new) abbreviation. Use different abbreviations for different actions. A full list of abbreviations can be found in our [Abbreviation Glossary](doc:abbreviations-glossary).
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
//...
//authentication code
//....
const inputDetails = {
    "cid": Date.now(),
    "type": "LIMIT",
    "symbol": 'tBTCUSD',
    "amount": "0.020",
    "price": '9600'
}

const inputPayload = [0, 'on', null, inputDetails] // Note how the payload is constructed here. It consists of an array starting with the CHANNEL_ID, TYPE, and PLACEHOLDER and is followed by the inputDetails object.

//Websocket Listener

wss.on('message', (msg) => {     // The 'message' event is called whenever the ws recieves ANY message
  let response = JSON.parse(msg)
  if (response.event === 'auth') {
    wss.send(JSON.stringify(inputPayload));// Submit payload for input
  }
  console.log(msg); // ALL ws receipts will be logged to console
})
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
###Tradable Balance Error

In some cases, when the above code is used to place an order is used, a tradable balance error can be returned even though there is sufficient tradable balance in the account. This can happen when the order is sent before the wallet snapshot is sent through the channel. To avoid this, use a sleep function to slightly delay sending the order when opening a new connection. Here is an example:
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
  {% code 'javascript' %}
function sleep(milliseconds) {
  const date = Date.now();
  let currentDate = null;
  do {
    currentDate = Date.now();
  } while (currentDate - date < milliseconds);
}
const wss = new WebSocket('wss://api.bitfinex.com/ws/2')
wss.onopen = function (event) {
            let inputPayload = JSON.stringify([
                0,
                "on",
                null,
                {
                  "cid": Date.now(),
                  "type": "LIMIT",
                  "symbol": 'tBTCUSD',
                  "amount": "0.020",
                  "price": '9600'
                }
                ])
            wss.send(JSON.stringify(payload))
            sleep(1000);
            wss.send(inputPayload);
          };
  {% endcode %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">New Order</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Creates a new order, can be used to create margin, exchange, and derivative orders.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
To submit an order, construct a payload using the "on" (order new) abbreviation and include the desired order details. Please look to the sidebar for a model and an example.

Upon submitting the order, you will receive a message of the appropriated type on the "account info" channel. Example responses are included in the sidebar. Please look to the [Orders](ref:ws-auth-orders) and [Notifications](ref:ws-auth-notifications) pages for further information, such as the response fields.

Order inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Name | Type | Description
-- | -- | --
gid  |  int32  | (optional) Group id for the order
cid  |  int45  |  Should be unique in the day (UTC) (not enforced)
type  |  string  |  The type of the order: LIMIT, MARKET, STOP, STOP LIMIT, TRAILING STOP, EXCHANGE MARKET, EXCHANGE LIMIT, EXCHANGE STOP, EXCHANGE STOP LIMIT, EXCHANGE TRAILING STOP, FOK, EXCHANGE FOK, IOC, EXCHANGE IOC.
symbol  |  string  |  symbol (tBTCUSD, tETHUSD, ...)
amount  |  decimal string  |  Positive for buy, Negative for sell
price  |  decimal string  |  Price (Not required for market orders)
lev | int | Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.
price_trailing  |  decimal string  | The trailing price
price_aux_limit  |  decimal string  | Auxiliary Limit price (for STOP LIMIT)
price_oco_stop | decimal string | OCO stop price
flags | int16 | See https://docs.bitfinex.com/v2/docs/flag-values.
tif | datetime string | Time-In-Force: datetime for automatic order cancellation (ie. 2020-01-01 10:45:23) )
meta | object | The meta object allows you to pass along an affiliate code inside the object - example: meta: {aff_code: "AFF_CODE_HERE"}
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">meta: {aff_code: ...}</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">API orders can now pass an affiliate code through which you can earn rebates. To learn more about these rebates and our affiliate program, please look at the relevant [announcement](https://blog.bitfinex.com/announcements/the-revolution-continues/) and [knowledge base article](https://support.bitfinex.com/hc/en-us/articles/360036965234-The-Bitfinex-Affiliate-Program).</p>
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Order Types**

Additional information about the types of orders can be found here:
https://support.bitfinex.com/hc/en-us/articles/115003506105-Limit-Order
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Multiple Flags</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">You may sum flag values to pass multiple flags. For example, passing 4160 (64 + 4096) means hidden and post only.
The default value is 0 and indicates that no flags will be used.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Model
[
  0,
  "on",
  null,
  {
    "gid": GID,
    "cid": CID,
    "type": TYPE,
    "symbol": SYMBOL,
    "amount": AMOUNT,
    "price": PRICE,
    "meta": {aff_code: "AFF_CODE_HERE"} // optional param to pass an affiliate code
    ...
  }
]

// Example
[
  0,
  "on",
  null,
  {
    "gid": 1,
    "cid": 12345,
    "type": "LIMIT",
    "symbol": "tBTCUSD",
    "amount": "1.0",
    "price": "500"
  }
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response</p>
  {% code 'json' %}
// When the order is submitted you will receive an 'n' (notification) event as confirmation. If the order request is successful, you will also receive  an 'on' (order new) event. Both events are sent through CHANNEL_ID = 0.

[
CHANNEL_ID
EVENT
 [
 MTS, //omitted for 'on' event
 TYPE, //omitted for 'on' event
 MESSAGE_ID, //omitted for 'on' event
 null, //omitted for 'on' event
  [
  ID,
  GID,
  CID,
  SYMBOL,
  MTS_CREATE, 
  MTS_UPDATE, 
  AMOUNT, 
  AMOUNT_ORIG, 
  TYPE,
  TYPE_PREV,
  MTS_TIF,
  _PLACEHOLDER,
  FLAGS,
  ORDER_STATUS,
  _PLACEHOLDER,
  _PLACEHOLDER,
  PRICE,
  PRICE_AVG,
  PRICE_TRAILING,
  PRICE_AUX_LIMIT,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  HIDDEN, 
  PLACED_ID,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  ROUTING,
  _PLACEHOLDER,
  _PLACEHOLDER,
  META
  ]
 CODE, //omitted for 'on' event
 STATUS, //omitted for 'on' event
 TEXT //omitted for 'on' event
 ]
]

[0,"n",[1575287438.515,"on-req",null,null,[1185815098,null,1575287436979,"tETHUSD",1575287438515,1575287438515,-2.5,-2.5,"LIMIT",null,null,null,0,"ACTIVE",null,null,230,0,0,0,null,null,null,0,null,null,null,null,"API>BFX",null,null,null],null,"SUCCESS","Submitting limit sell order for -2.5 ETH."]]

[0,"on",[1185815098,null,1575287436979,"tETHUSD",1575287438515,1575287438519,-2.5,-2.5,"LIMIT",null,null,null,0,"ACTIVE",null,null,230,0,0,0,null,null,null,0,0,null,null,null,"API>BFX",null,null,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Update Order</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Update an existing order, can be used to update margin, exchange, and derivative orders.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
To update an order, construct a payload using the "ou" (order update) abbreviation and include the desired order details. Please look to the sidebar for examples.

When you update the order, you will receive a message of the appropriated type on the "account info" channel. Example responses are included in the sidebar. Please look to the [Orders](ref:ws-auth-orders) and [Notifications](ref:ws-auth-notifications) pages for further information, such as the response fields.

Order inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
** Request Fields **

Name | Type | Description
-- | -- | --
id  |  int64  |  Order ID
cid  |  int45  |  Client Order ID
cid_date  |  string  |  Client Order ID Date
gid | int32 | Group Order ID
price | decimal string | Price
amount | decimal string | Amount
lev | int | Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.
delta | decimal string | Change of amount
price_aux_limit | decimal string | Auxiliary limit price
price_trailing | decimal string | Trailing price delta
flags | int16 | See https://docs.bitfinex.com/v2/docs/flag-values.
tif | datetime string | Time-In-Force: datetime for automatic order cancellation (ie. 2020-01-01 10:45:23) )
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">Multiple Flags</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">The summation of flags may result in multiple flags. For example 4160 (64 + 4096) means hidden post only.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Adjust the remaining amount to 0.1 and set price to 500
[
  0, 
  'ou', 
  null, 
  { 
    id: 1149698545, 
    amount: '0.1', 
    price: '500' 
  }
]   
    
// Increase the remaining amount by 0.1
[
  0, 
  'ou', 
  null, 
  { 
    id: 1149698545, 
    delta: '0.1', 
    price: '6500' 
  }
]
    
// Change both price parameters of a stop limit order and set it to hidden
[
  0, 
  'ou', 
  null, 
  { 
    id: 1149698545, 
    delta: '0.1', 
    price: '2500', 
    price_aux_limit: '2600', 
    flags: 64 
  }
]

// Move the order to group `123`
[
  0, 
  'ou', 
  null, 
  { 
    id: 1149698545, 
    gid: 123 
  }
]
    
// set trailing price delta to 45
[
  0, 
  'ou', 
  null, 
  { 
    id: 1149698545, 
    price_trailing: '45' 
  }
]

// set order expiration date
[
  0, 
  'ou', 
  null, 
  { 
    id: 1149698545, 
    tif: '2020-06-30' 
  }
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response</p>
  {% code 'json' %}
// When the order update is submitted you will receive an 'n' (notification) event as confirmation. If successful, you will also receive an 'ou' (order update) event. Both events are sent on CHANNEL_ID = 0.

[
CHANNEL_ID
EVENT
 [
 MTS, //omitted for 'ou' event
 TYPE, //omitted for 'ou' event
 MESSAGE_ID, //omitted for 'ou' event
 null, //omitted for 'ou' event
  [
  ID,
  GID,
  CID,
  SYMBOL,
  MTS_CREATE, 
  MTS_UPDATE, 
  AMOUNT, 
  AMOUNT_ORIG, 
  TYPE,
  TYPE_PREV,
  MTS_TIF,
  _PLACEHOLDER,
  FLAGS,
  ORDER_STATUS,
  _PLACEHOLDER,
  _PLACEHOLDER,
  PRICE,
  PRICE_AVG,
  PRICE_TRAILING,
  PRICE_AUX_LIMIT,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  HIDDEN, 
  PLACED_ID,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  ROUTING,
  _PLACEHOLDER,
  _PLACEHOLDER,
  META
  ]
 CODE, //omitted for 'ou' event
 STATUS, //omitted for 'ou' event
 TEXT //omitted for 'ou' event
 ]
]


[0,"n",[1575289447641,"ou-req",null,null,[1185815100,null,1575289350475,"tETHUSD",1575289351944,1575289351948,-3,-3,"LIMIT",null,null,null,0,"ACTIVE",null,null,240,0,0,0,null,null,null,0,0,null,null,null,"API>BFX",null,null,null],null,"SUCCESS","Submitting update to limit sell order for 3 ETH."]]

[0,"ou",[1185815100,null,1575289350475,"tETHUSD",1575289351944,1575289447644,-3,-3,"LIMIT","LIMIT",null,null,0,"ACTIVE",null,null,240,0,0,0,null,null,null,0,0,null,null,null,"API>BFX",null,null,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Order Multi-OP</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Send multiple order-related operations.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
The Order Multi-OP command allows sending of multiple order operations at the same time. To do this, construct a payload with the "ox_multi" (order operation multi) abbreviation. Use the inner array to specify the different operations you would like to perform, starting each separate operation with the appropriate abbreviation followed by an object holding the details.

You will receive messages to confirm your requests through "n" (notification) events and, if successful, confirmation of the operations using other event messages ("on", "oc", "ou", etc.). Please look to the [Orders](ref:ws-auth-orders) and [Notifications](ref:ws-auth-notifications) pages for further information on the responses you receive.

Order inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Model
[
  0,
  "ox_multi",
  null,
  [
    [OPERATION, {}],
    [OPERATION, {}],
    [OPERATION, {}],
    ...
  ]
]
  
// Example
[
  0,
  "ox_multi",
  null,
  [
    ["on", {...}],
    ["oc", {...}],
    ["oc_multi", {...}],
    ["oc", {...}],
    ...
  ]
]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel Order</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancels the specified order
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
To cancel an order, construct a payload using the "oc" (order cancel) abbreviation. The order details need to include either the Internal Order ID or the Client Order ID and Client Order ID Date (YYYY-MM-DD format). Please look to the sidebar for examples.

When you cancel an order, you will receive a message of the appropriated type on the "account info" channel. Example responses are included in the sidebar. Please look to the [Orders](ref:ws-auth-orders) and [Notifications](ref:ws-auth-notifications) pages for further information.

Order inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
** Request Fields **

Name | Type | Description
-- | -- | --
id  |  int64  |  Internal Order ID
cid  |  int45  |  Client Order ID
cid_date  |  string  |  Client Order ID Date

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Cancel order by internal order Id
[
  0,
  "oc",
  null,
  {
    "id": ID
  }
]

// Cancel order using client order Id and order creation date
[
  0,
  "oc",
  null,
  {
    "cid": CID,
    "cid_date": CID_DATE
  }
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response</p>
  {% code 'json' %}
// When the cancellation request is submitted you will receive an 'n' (notification) event as confirmation. If the cancellation is successful, you will also receive  an 'oc' (order cancelled) event. Both events are sent through CHANNEL_ID = 0.

[
CHANNEL_ID
EVENT
 [
 MTS, //omitted for 'oc' event
 TYPE, //omitted for 'oc' event
 MESSAGE_ID, //omitted for 'oc' event
 null, //omitted for 'oc' event
  [
  ID,
  GID,
  CID,
  SYMBOL,
  MTS_CREATE, 
  MTS_UPDATE, 
  AMOUNT, 
  AMOUNT_ORIG, 
  TYPE,
  TYPE_PREV,
  MTS_TIF,
  _PLACEHOLDER,
  FLAGS,
  ORDER_STATUS,
  _PLACEHOLDER,
  _PLACEHOLDER,
  PRICE,
  PRICE_AVG,
  PRICE_TRAILING,
  PRICE_AUX_LIMIT,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  HIDDEN, 
  PLACED_ID,
  _PLACEHOLDER,
  _PLACEHOLDER,
  _PLACEHOLDER,
  ROUTING,
  _PLACEHOLDER,
  _PLACEHOLDER,
  META
  ]
 CODE, //omitted for 'oc' event
 STATUS, //omitted for 'oc' event
 TEXT //omitted for 'oc' event
 ]
]

[0,"n",[1575291219660,"oc-req",null,null,[1185815100,null,1575289350475,"tETHUSD",1575289351944,1575289447644,-3,-3,"LIMIT","LIMIT",null,null,0,"ACTIVE",null,null,240,0,0,0,null,null,null,0,0,null,null,null,"API>BFX",null,null,null],null,"SUCCESS","Submitted for cancellation; waiting for confirmation (ID: 1185815100)."]]

[0,"oc",[1185815100,null,1575289350475,"tETHUSD",1575289351944,1575291219663,-3,-3,"LIMIT","LIMIT",null,null,0,"CANCELED",null,null,240,0,0,0,null,null,null,0,0,null,null,null,"API>BFX",null,null,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel Order Multi</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancel the specified order list
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
The Cancel Order Multi command allows sending of multiple order cancellation operations at the same time. To do this, construct a payload with the "oc_multi" (order cancel multi) abbreviation. The payload needs to include an object that specifies which orders to cancel based on Internal Order ID's, Client Order ID's (along with the cid_DATE in a YYYY-MM-DD format), Group ID, or the "all" request field. Please look to the sidebar for examples of each method.

You will receive messages to confirm your cancellation requests through "n" (notification) events and, if successful, confirmation through "oc" (order cancelled) events.  Please look to the [Orders](ref:ws-auth-orders) and [Notifications](ref:ws-auth-notifications) pages for further information on the responses you receive.

Order inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
** Request Fields **

Name | Type | Description
-- | -- | --
id  |  int64  |  Internal Order ID
cid  |  int45  |  Client Order ID
cid_date  |  string  |  Client Order ID Date
gid | int32 | Group Order ID
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout danger">
<p class="bfx-oss-docs-readmeio-block__callout-title">Cancel All Orders</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Please note that using {"all" : 1} to cancel all orders will cancel all trading as well as all derivatives orders. Order IDs can be passed instead to cancel only selected orders.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Cancel all orders
[
  0,
  "oc_multi",
  null,
  {
    "all": 1
  }
]

// Cancel multiple orders by Internal Order ID
[
  0,
  "oc_multi",
  null,
  {
    "id": [ID, 1234, ...]
  }
]

// Cancel multiple orders using Client Order ID and order creation date
[
  0,
  "oc_multi",
  null,
  {
    "cid": [
      [ID, CID_DATE],
      [234, "2016-12-05"],
      ...
    ]
  }
]

// Cancel multiple orders using Group ID
[
  0,
  "oc_multi",
  null,
  {
     "gid": [GID, 11, ...]
  }
]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">New Offer</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Create a new funding offer.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Create a new funding offer by constructing a payload using the "fon" (funding offer new) abbreviation and include an offer details object. Please look to the sidebar for examples.

Upon sending an offer, you will receive a confirmation as an 'n' (notification) event and, if the offer is placed successfully, a confirmation through a "fon" (funding offer new) event. Example responses are included in the sidebar. Please look to the [Funding Offers](ref:ws-auth-funding-offers) and [Notifications](ref:ws-auth-notifications) pages for further information.

Funding offer inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Name | Type | Description
-- | -- | --
type  |  string  |  LIMIT, FRRDELTAVAR
symbol  |  string  |  symbol (fUSD, fBTC, ...)
amount  |  decimal string  |  Positive for buy, negative for sell
rate  |  decimal string  |  Rate
period  |  decimal  |  Time period of offer. Minimum 2 days. Maximum 30 days.
flags | int16 | See https://docs.bitfinex.com/v2/docs/flag-values.

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Model
[
  0,
  "fon",
  null,
  {
    type: TYPE,
    symbol: SYMBOL,
    amount: AMOUNT,
    rate: RATE,
    period: PERIOD,
    flags: FLAGS
  }
]

// Examples
[
  0, 
  'fon', 
  null, 
  { 
    type: "LIMIT", 
    symbol: "fUSD", 
    amount: '50', 
    rate: '0.0002', 
    period: 7, 
    flags: 0 
  }
]

[
  0, 
  'fon', 
  null, 
  { 
    type: "FRRDELTAVAR", 
    symbol: "fUSD", 
    amount: '-50', 
    rate: '0.0001', 
    period: 7, 
    flags: 64 
  }
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response</p>
  {% code 'json' %}
// When the offer request is submitted you will receive an 'n' (notification) event as confirmation. If the offer placement is successful, you will also receive  an 'fon' (funding offer new) event. Both events are sent through CHANNEL_ID = 0.

[
CHANNEL_ID
EVENT
 [
 MTS, //omitted for 'fon' event
 TYPE, //omitted for 'fon' event
 MESSAGE_ID, //omitted for 'fon' event
 null, //omitted for 'fon' event
  [
    ID,
    SYMBOL,
    MTS_CREATED,
    MTS_UPDATED,
    AMOUNT,
    AMOUNT_ORIG,
    OFFER_TYPE,
    _PLACEHOLDER,
    _PLACEHOLDER,
    FLAGS,
    OFFER_STATUS,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER,
    RATE,
    PERIOD,
    NOTIFY,
    HIDDEN,
    _PLACEHOLDER,
    RENEW,
    _PLACEHOLDER
  ]
 CODE, //omitted for 'fon' event
 STATUS, //omitted for 'fon' event
 TEXT //omitted for 'fon' event
 ]
]

[0,"n",[1575293958819,"fon-req",null,null,[41238934,null,null,null,500,null,null,null,null,null,null,null,null,null,0.02,2,null,null,null,null,null],null,"SUCCESS","Submitting funding offer of 500.0 UST at 2.000 for 2 days."]]

[0,"fon",[41238934,"fUST",1575293959000,1575293959000,500,500,"LIMIT",null,null,0,"ACTIVE",null,null,null,0.02,2,0,0,null,0,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Cancel Offer</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Cancel a funding offer.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
To cancel an offer, construct a payload using the "foc" (funding offer cancel) abbreviation. Include the Offer ID in the payload. Please look to the sidebar for a model and example.

When you cancel an offer, you will receive a message of the appropriated type on the "account info" channel. Example responses are included in the sidebar. Please look to the [Funding Offers](ref:ws-auth-funding-offers) page for further information.

Funding offer inputs require you to run the authentication code along with additional code for the input. The authentication code can be found  on our [Authenticated Channels](doc:ws-auth) and the additional code for inputs can be found on the [Websocket Inputs](ref:ws-input) page.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
**Request Fields**

Name | Type | Description
-- | -- | --
id  |  int  |  Offer ID

{% endmarkdown %}
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'json' %}
// Model
[
  0,
  "foc",
  null,
  {
    id: ID
  }
]

// Examples
[
  0, 
  'foc', 
  null, 
  { 
    id: 12345
  }
]
  {% endcode %}
</div>
<div class="bfx-oss-docs-readmeio-block__code">
<p>Response</p>
  {% code 'json' %}
[
CHANNEL_ID
EVENT
 [
 MTS, //omitted for 'foc' event
 TYPE, //omitted for 'foc' event
 MESSAGE_ID, //omitted for 'foc' event
 null, //omitted for 'foc' event
  [
    ID,
    SYMBOL,
    MTS_CREATED,
    MTS_UPDATED,
    AMOUNT,
    AMOUNT_ORIG,
    OFFER_TYPE,
    _PLACEHOLDER,
    _PLACEHOLDER,
    FLAGS,
    OFFER_STATUS,
    _PLACEHOLDER,
    _PLACEHOLDER,
    _PLACEHOLDER,
    RATE,
    PERIOD,
    NOTIFY,
    HIDDEN,
    _PLACEHOLDER,
    RENEW,
    _PLACEHOLDER
  ]
 CODE, //omitted for 'foc' event
 STATUS, //omitted for 'foc' event
 TEXT //omitted for 'foc' event
 ]
]

[0,"foc",[41238934,"fUST",1575293959000,1575294374000,500,500,"LIMIT",null,null,0,"CANCELED",null,null,null,0.02,2,0,0,null,0,null]]
  {% endcode %}
</div>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block">
  <div class="bfx-oss-docs-readmeio-block__left">
    <h2 class="bfx-oss-docs-readmeio-block__title">Calc</h2>
    <div class="bfx-oss-docs-readmeio-block__subtitle">
      {% markdown %}
Send calc requests to trigger specific calculations.
      {% endmarkdown %}
    </div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
Requesting a calculation can be done by constructing a payload using the "calc" abbreviation. Include the calc parameters in the payload as an array. Please look to the sidebar for an example payload.
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__markdown">
{% markdown %}
## Possible prefixes:

- `margin_sym_SYMBOL`
- `funding_sym_SYMBOL`
- `position_SYMBOL`
- `wallet_WALLET-TYPE_CURRENCY`
- `balance`
{% endmarkdown %}
</div>
<div class="bfx-oss-docs-readmeio-block__callout info">
<p class="bfx-oss-docs-readmeio-block__callout-title">NOTE</p>
<p class="bfx-oss-docs-readmeio-block__callout-body">Calculations are on demand, so no more streaming of unnecessary data.
Websocket server allows up to 30 calculations per batch. If the client sends too many concurrent requests (or tries to spam) requests, it will receive an error and potentially a disconnection.
The Websocket server performs a maximum of 8 calculations per second per client.</p>
</div>
</div>
<div class="bfx-oss-docs-readmeio-block__right">
<div class="bfx-oss-docs-readmeio-block__code">
<p>Payload</p>
  {% code 'javascript' %}
[
  0,
  "calc",
  null,
  [
    ["margin_base"],
    ["margin_sym_tBTCUSD"],
    ["position_tBTCUSD"],
    ["wallet_margin_BTC"],
    ["wallet_funding_USD"],
    ["balance"]
  ]
]
  {% endcode %}
</div>
</div>
</div>
</div>
</div>
{% endblock %}