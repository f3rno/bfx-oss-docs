(function(){var l=debugBase.extend("api-ref-sample-viewer");var selViewer=".bfx-oss-docs-api-reference-sample-viewer";var selHeader=".bfx-oss-docs-api-reference-sample-viewer__header";var selContent=".bfx-oss-docs-api-reference-sample-viewer__content";Zepto(function($){$("".concat(selHeader," li")).on("click",function(e){var viewer=$(e.target).closest(selViewer);if(!viewer){l("Error: parent viewer not found");return}var sampleSetID=viewer.data("sample-set-id");if(!_.isString(sampleSetID)||_.isEmpty(sampleSetID)){l("Error: viewer has no sample set ID");return}var selOwnViewer="".concat(selViewer,"[data-sample-set-id=\"").concat(sampleSetID,"\"]");$("".concat(selOwnViewer," ").concat(selHeader," li")).removeClass("active");$("".concat(selOwnViewer," ").concat(selContent," li")).removeClass("active");var menuItem=e.target.nodeName==="LI"?$(e.target):$(e.target).closest("li");if(!menuItem){l("Error: parent <li> not found");return}menuItem.addClass("active");var sampleID=menuItem.data("sample-id");if(!_.isString(sampleID)||_.isEmpty(sampleID)){l("Error: sample menu item has no ID");return}$("".concat(selOwnViewer," ").concat(selContent," [data-sample-id=\"").concat(sampleID,"\"]")).addClass("active")})})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsibCIsImRlYnVnQmFzZSIsImV4dGVuZCIsInNlbFZpZXdlciIsInNlbEhlYWRlciIsInNlbENvbnRlbnQiLCJaZXB0byIsIiQiLCJvbiIsImUiLCJ2aWV3ZXIiLCJ0YXJnZXQiLCJjbG9zZXN0Iiwic2FtcGxlU2V0SUQiLCJkYXRhIiwiXyIsImlzU3RyaW5nIiwiaXNFbXB0eSIsInNlbE93blZpZXdlciIsInJlbW92ZUNsYXNzIiwibWVudUl0ZW0iLCJub2RlTmFtZSIsImFkZENsYXNzIiwic2FtcGxlSUQiXSwibWFwcGluZ3MiOiJBQUVBLENBQUMsVUFBTSxDQUNMLEdBQU1BLENBQUFBLENBQUMsQ0FBR0MsU0FBUyxDQUFDQyxNQUFWLENBQWlCLHVCQUFqQixDQUFWLENBQ0EsR0FBTUMsQ0FBQUEsU0FBUyxDQUFHLDJDQUFsQixDQUNBLEdBQU1DLENBQUFBLFNBQVMsQ0FBRyxtREFBbEIsQ0FDQSxHQUFNQyxDQUFBQSxVQUFVLENBQUcsb0RBQW5CLENBRUFDLEtBQUssQ0FBQyxTQUFDQyxDQUFELENBQU8sQ0FDWEEsQ0FBQyxXQUFJSCxTQUFKLFFBQUQsQ0FBcUJJLEVBQXJCLENBQXdCLE9BQXhCLENBQWlDLFNBQVVDLENBQVYsQ0FBYSxDQUM1QyxHQUFNQyxDQUFBQSxNQUFNLENBQUdILENBQUMsQ0FBQ0UsQ0FBQyxDQUFDRSxNQUFILENBQUQsQ0FBWUMsT0FBWixDQUFvQlQsU0FBcEIsQ0FBZixDQUVBLEdBQUksQ0FBQ08sTUFBTCxDQUFhLENBQ1hWLENBQUMsQ0FBQyxnQ0FBRCxDQUFELENBQ0EsTUFDRCxDQUVELEdBQU1hLENBQUFBLFdBQVcsQ0FBR0gsTUFBTSxDQUFDSSxJQUFQLENBQVksZUFBWixDQUFwQixDQUVBLEdBQUksQ0FBQ0MsQ0FBQyxDQUFDQyxRQUFGLENBQVdILFdBQVgsQ0FBRCxFQUE0QkUsQ0FBQyxDQUFDRSxPQUFGLENBQVVKLFdBQVYsQ0FBaEMsQ0FBd0QsQ0FDdERiLENBQUMsQ0FBQyxvQ0FBRCxDQUFELENBQ0EsTUFDRCxDQUVELEdBQU1rQixDQUFBQSxZQUFZLFdBQU1mLFNBQU4sa0NBQXVDVSxXQUF2QyxPQUFsQixDQUVBTixDQUFDLFdBQUlXLFlBQUosYUFBb0JkLFNBQXBCLFFBQUQsQ0FBcUNlLFdBQXJDLENBQWlELFFBQWpELEVBQ0FaLENBQUMsV0FBSVcsWUFBSixhQUFvQmIsVUFBcEIsUUFBRCxDQUFzQ2MsV0FBdEMsQ0FBa0QsUUFBbEQsRUFFQSxHQUFNQyxDQUFBQSxRQUFRLENBQUdYLENBQUMsQ0FBQ0UsTUFBRixDQUFTVSxRQUFULEdBQXNCLElBQXRCLENBQ2JkLENBQUMsQ0FBQ0UsQ0FBQyxDQUFDRSxNQUFILENBRFksQ0FFYkosQ0FBQyxDQUFDRSxDQUFDLENBQUNFLE1BQUgsQ0FBRCxDQUFZQyxPQUFaLENBQW9CLElBQXBCLENBRkosQ0FJQSxHQUFJLENBQUNRLFFBQUwsQ0FBZSxDQUNicEIsQ0FBQyxDQUFDLDhCQUFELENBQUQsQ0FDQSxNQUNELENBRURvQixRQUFRLENBQUNFLFFBQVQsQ0FBa0IsUUFBbEIsRUFFQSxHQUFNQyxDQUFBQSxRQUFRLENBQUdILFFBQVEsQ0FBQ04sSUFBVCxDQUFjLFdBQWQsQ0FBakIsQ0FFQSxHQUFJLENBQUNDLENBQUMsQ0FBQ0MsUUFBRixDQUFXTyxRQUFYLENBQUQsRUFBeUJSLENBQUMsQ0FBQ0UsT0FBRixDQUFVTSxRQUFWLENBQTdCLENBQWtELENBQ2hEdkIsQ0FBQyxDQUFDLG1DQUFELENBQUQsQ0FDQSxNQUNELENBRURPLENBQUMsV0FBSVcsWUFBSixhQUFvQmIsVUFBcEIsK0JBQW1Ea0IsUUFBbkQsUUFBRCxDQUNHRCxRQURILENBQ1ksUUFEWixDQUVELENBeENELENBeUNELENBMUNJLENBMkNOLENBakREIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIFplcHRvLCBfLCBkZWJ1Z0Jhc2UgKi9cblxuKCgpID0+IHtcbiAgY29uc3QgbCA9IGRlYnVnQmFzZS5leHRlbmQoJ2FwaS1yZWYtc2FtcGxlLXZpZXdlcicpXG4gIGNvbnN0IHNlbFZpZXdlciA9ICcuYmZ4LW9zcy1kb2NzLWFwaS1yZWZlcmVuY2Utc2FtcGxlLXZpZXdlcidcbiAgY29uc3Qgc2VsSGVhZGVyID0gJy5iZngtb3NzLWRvY3MtYXBpLXJlZmVyZW5jZS1zYW1wbGUtdmlld2VyX19oZWFkZXInXG4gIGNvbnN0IHNlbENvbnRlbnQgPSAnLmJmeC1vc3MtZG9jcy1hcGktcmVmZXJlbmNlLXNhbXBsZS12aWV3ZXJfX2NvbnRlbnQnXG5cbiAgWmVwdG8oKCQpID0+IHtcbiAgICAkKGAke3NlbEhlYWRlcn0gbGlgKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgY29uc3Qgdmlld2VyID0gJChlLnRhcmdldCkuY2xvc2VzdChzZWxWaWV3ZXIpXG5cbiAgICAgIGlmICghdmlld2VyKSB7XG4gICAgICAgIGwoJ0Vycm9yOiBwYXJlbnQgdmlld2VyIG5vdCBmb3VuZCcpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCBzYW1wbGVTZXRJRCA9IHZpZXdlci5kYXRhKCdzYW1wbGUtc2V0LWlkJylcblxuICAgICAgaWYgKCFfLmlzU3RyaW5nKHNhbXBsZVNldElEKSB8fCBfLmlzRW1wdHkoc2FtcGxlU2V0SUQpKSB7XG4gICAgICAgIGwoJ0Vycm9yOiB2aWV3ZXIgaGFzIG5vIHNhbXBsZSBzZXQgSUQnKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3Qgc2VsT3duVmlld2VyID0gYCR7c2VsVmlld2VyfVtkYXRhLXNhbXBsZS1zZXQtaWQ9XCIke3NhbXBsZVNldElEfVwiXWBcblxuICAgICAgJChgJHtzZWxPd25WaWV3ZXJ9ICR7c2VsSGVhZGVyfSBsaWApLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgJChgJHtzZWxPd25WaWV3ZXJ9ICR7c2VsQ29udGVudH0gbGlgKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcblxuICAgICAgY29uc3QgbWVudUl0ZW0gPSBlLnRhcmdldC5ub2RlTmFtZSA9PT0gJ0xJJ1xuICAgICAgICA/ICQoZS50YXJnZXQpXG4gICAgICAgIDogJChlLnRhcmdldCkuY2xvc2VzdCgnbGknKVxuXG4gICAgICBpZiAoIW1lbnVJdGVtKSB7XG4gICAgICAgIGwoJ0Vycm9yOiBwYXJlbnQgPGxpPiBub3QgZm91bmQnKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgbWVudUl0ZW0uYWRkQ2xhc3MoJ2FjdGl2ZScpXG5cbiAgICAgIGNvbnN0IHNhbXBsZUlEID0gbWVudUl0ZW0uZGF0YSgnc2FtcGxlLWlkJylcblxuICAgICAgaWYgKCFfLmlzU3RyaW5nKHNhbXBsZUlEKSB8fCBfLmlzRW1wdHkoc2FtcGxlSUQpKSB7XG4gICAgICAgIGwoJ0Vycm9yOiBzYW1wbGUgbWVudSBpdGVtIGhhcyBubyBJRCcpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICAkKGAke3NlbE93blZpZXdlcn0gJHtzZWxDb250ZW50fSBbZGF0YS1zYW1wbGUtaWQ9XCIke3NhbXBsZUlEfVwiXWApXG4gICAgICAgIC5hZGRDbGFzcygnYWN0aXZlJylcbiAgICB9KVxuICB9KVxufSkoKVxuIl19