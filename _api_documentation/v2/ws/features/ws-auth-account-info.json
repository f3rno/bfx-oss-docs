{
  "title": "Account Info",
  "id": "ws-auth-account-info",
  "description": "The account info channel is a channel that you are automatically subscribed to when you authenticate your session. It provides all the pertinent info for your orders, positions, trades, funding offers and loans, balances, and more.",
  "elements": [
    {
      "type": "CODE",
      "content": {
        "codes": [
          {
            "code": "const crypto = require('crypto-js') // Standard JavaScript cryptography library\nconst WebSocket = require('ws') // Websocket library for Node\n\nconst apiKey = '' // Users API credentials are defined here\nconst apiSecret = ''\n\nconst authNonce = Date.now() * 1000 // Generate an ever increasing, single use value. (a timestamp satisfies this criteria)\nconst authPayload = 'AUTH' + authNonce // Compile the authentication payload, this is simply the string 'AUTH' prepended to the nonce value\nconst authSig = crypto.HmacSHA384(authPayload, apiSecret).toString(crypto.enc.Hex) // The authentication payload is hashed using the private key, the resulting hash is output as a hexadecimal string\n\nconst payload = {\n  apiKey, //API key\n  authSig, //Authentication Sig\n  authNonce, \n  authPayload,\n  event: 'auth', // The connection event, will always equal 'auth'\n  //dms: 4, // Optional Deam-Man-Switch flag to cancel all orders when socket is closed\n  //filter: [] // Optional filter for the account info received (default = everything)\n}\n\nconst wss = new WebSocket('wss://api.bitfinex.com/ws/2') // Create new Websocket\n\nwss.on('open', () => wss.send(JSON.stringify(payload)))\n\nwss.on('message', (msg) => {     // The 'message' event is called whenever the ws recieves ANY message\n  let response = JSON.parse(msg)\n  console.log(msg)\n})",
            "language": "javascript"
          },
          {
            "code": "package main\nimport (\n    \"crypto/hmac\"\n    \"crypto/sha512\"\n    \"encoding/hex\"\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n    \"time\"\n    \"golang.org/x/net/websocket\"\n)\nfunc main() {\n    ws, err := websocket.Dial(\"wss://api.bitfinex.com/ws/2\", \"\", \"http://localhost/\")\n    if err != nil {\n        return\n    }\n    nonce := fmt.Sprintf(\"%v\", time.Now().Unix())\n    payload := \"AUTH\" + nonce\n    sig := hmac.New(sha512.New384, []byte(\"API_SECRET\"))\n    sig.Write([]byte(payload))\n    payload_sign := hex.EncodeToString(sig.Sum(nil))\n    connectMsg, _ := json.Marshal(map[string]interface{}{\n        \"event\":       \"auth\",\n        \"apiKey\":      \"API_KEY\",\n        \"authSig\":     payload_sign,\n        \"authPayload\": payload,\n        \"authNonce\":   nonce,\n    })\n    // Send auth message\n    _, err = ws.Write(connectMsg)\n    if err != nil {\n        log.Fatal(err)\n        return\n    }\n    // Read all incoming messages\n    var msg string\n    for {\n        if err = websocket.Message.Receive(ws, &msg); err != nil {\n            fmt.Println(err)\n        } else {\n            fmt.Println(msg)\n        }\n    }\n}",
            "language": "go"
          }
        ]
      }
    },
    {
      "type": "MARKDOWN",
      "content": "**Subscribing to Account Info**\n\nUse the code above to open an authenticated connection. Subscribing to the Account Info channel is automatically done when you authenticate your session. You will continue to receive updates until the connection is disconnected/terminated/restarted.\n"
    },
    {
      "type": "CODE",
      "content": {
        "codes": [
          {
            "code": "{\n    event: \"auth\",\n    apiKey: api_key,\n    authSig: signature,\n    authPayload: payload,\n    authNonce: +authNonce,\n    calc: 1\n}",
            "language": "json",
            "name": "Request"
          },
          {
            "code": "{ event: 'auth',\n  status: 'OK',\n  chanId: 0,\n  userId: 269312,\n  caps: '{\"orders\": {\"read\": \"1\", \"write\": \"0\"}, \"account\": {\"read\": \"1\", \"write\": \"0\"}, \"funding\": {\"read\": \"1\", \"write\": \"1\"}, \"history\": {\"read\": \"1\", \"write\": \"0\"}, \"wallets\": {\"read\": \"1\", \"write\": \"1\"}, \"withdraw\": {\"read\": \"0\", \"write\": \"1\"}, \"positions\": {\"read\": \"1\", \"write\": \"1\"}}' }",
            "language": "json",
            "name": "Response"
          },
          {
            "code": "// response-failure\n{  \n   \"event\":\"auth\",\n   \"status\":\"FAIL\",\n   \"chanId\":0,\n   \"code\":\"<ERROR_CODE>\"\n}",
            "language": "json",
            "name": "Response failure"
          }
        ],
        "sidebar": true
      }
    },
    {
      "type": "MARKDOWN",
      "content": "**Filters**\n\nFilters can be applied to limit the information received through the channel. You can find more information about setting up filters for the account info channel [here](https://docs.bitfinex.com/docs/ws-auth#section-channel-filters),\n"
    },
    {
      "type": "MARKDOWN",
      "content": "**Structure**\nBy default, authentication will subscribe you to all account info updates. The account info channel will be assigned a CHANNEL_ID of 0. All snapshots and updates provided through the channel will be structured as follows:"
    },
    {
      "type": "CODE",
      "content": {
        "codes": [
          {
            "code": "[\n CHANNEL_ID // = 0\n <TYPE> //'on', 'ou', 'oc', etc. \n  [\n   ... //Content goes here\n  ]\n]\n",
            "language": "json"
          }
        ]
      }
    },
    {
      "type": "MARKDOWN",
      "content": "**Separate Streams**\nPlease see the documentation page for each stream to find a further specification of the contents returned by each stream. The following table shows all of the included streams, their purpose, and the abbreviations by which messages in the channel can be identified:\n[block:parameters]\n{\n\"data\": {\n\"h-0\": \"Stream Name\",\n\"h-1\": \"Purpose\",\n\"h-2\": \"Associated Abbreviations (TYPE)s\",\n\"0-0\": \"[Orders](https://docs.bitfinex.com/reference#ws-auth-orders)\",\n\"1-0\": \"[Positions](https://docs.bitfinex.com/reference#ws-auth-position)\",\n\"2-0\": \"[Trades](https://docs.bitfinex.com/reference#ws-auth-trades)\",\n\"3-0\": \"[Funding Offers](https://docs.bitfinex.com/reference#ws-auth-offers)\",\n\"4-0\": \"[Funding Credits](https://docs.bitfinex.com/reference#ws-auth-credits)\",\n\"5-0\": \"[Funding Loans](https://docs.bitfinex.com/reference#ws-auth-loans)\",\n\"6-0\": \"[Wallets](https://docs.bitfinex.com/reference#ws-auth-wallets)\",\n\"7-0\": \"[Balance Info](https://docs.bitfinex.com/reference#ws-auth-balance)\",\n\"8-0\": \"[Margin Info](https://docs.bitfinex.com/reference#ws-auth-margin)\",\n\"9-0\": \"[Funding Info](https://docs.bitfinex.com/reference#ws-auth-funding)\",\n\"10-0\": \"[Funding Trades](https://docs.bitfinex.com/reference#ws-auth-funding-trades)\",\n\"11-0\": \"[Notifications](https://docs.bitfinex.com/reference#ws-auth-notifications)\",\n\"0-1\": \"Snapshot and updates on the trade orders in your account.\",\n\"0-2\": \"'os' = order snapshot; 'on' = order new; 'ou' = order update; 'oc' = order cancel\",\n\"1-1\": \"Snapshot and updates on the positions in your account.\",\n\"1-2\": \"'ps' = position snapshot; 'pn' = position new; 'pu' = position update; 'pc' = position close\",\n\"2-1\": \"Provides a feed of your trades\",\n\"2-2\": \"'te' = trade executed; 'tu' = trade execution update\",\n\"3-1\": \"Provides a snapshot and updates on the funding offers in your account.\",\n\"3-2\": \"'fos' = funding offer snapshot; 'fon' = funding offer new; 'fou' = funding offer update; 'foc' = funding offer cancel\",\n\"4-1\": \"Provides a snapshot and updates on your provided funding used in active positions.\",\n\"4-2\": \"'fcs' = funding credits snapshot; 'fcn' = funding credits new; 'fcu' = funding credits update; 'fcc' = funding credits close\",\n\"5-1\": \"Provides a snapshot and updates on your provided funding that is not used in active positions.\",\n\"5-2\": \"'fls' = funding loans snapshot; 'fln' = funding loans new; 'flu' = funding loans update; 'flc' = funding loans close\",\n\"6-1\": \"Provides a snapshot and updates on wallet balance, unsettled interest, and available balance.\",\n\"6-2\": \"'ws' = wallet snapshot; 'wu' = wallet update\",\n\"7-1\": \"Provides updates on the total and net assets in your account.\",\n\"7-2\": \"'bu' = balance update\",\n\"10-1\": \"Provides a feed of your funding trades.\",\n\"10-2\": \"'fte' = funding trade execution; 'ftu' = funding trade update\",\n\"11-1\": \"Work in progress: will be used for different changes in status, price alerts, etc.\",\n\"11-2\": \"'n' = notification\",\n\"8-1\": \"Provides margin info updates (tradable balance, margin balance, margin net, margin required)\",\n\"9-1\": \"Provides funding info updates (average rates for taken and provided funding, average duration for taken and provided funding)\",\n\"8-2\": \"'miu' = margin info update\",\n\"9-2\": \"'fiu' = funding info update\"\n},\n\"cols\": 3,\n\"rows\": 12\n}"
    }
  ]
}